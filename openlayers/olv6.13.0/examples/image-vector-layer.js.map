{"version":3,"file":"image-vector-layer.js","mappings":"8FAgDIA,E,yFAxCEC,EAAQ,IAAIC,EAAAA,GAAM,CACtBC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,cAILC,EAAc,IAAIC,EAAAA,EAAiB,CACvCC,WAAY,UACZC,WAAY,EACZC,OAAQ,IAAIC,EAAAA,EAAa,CACvBC,IAAK,qDACLC,OAAQ,IAAIC,EAAAA,IAEdb,MAAO,SAAUc,GACf,IAAMV,EAAQU,EAAQC,IAAI,UAAY,UAEtC,OADAf,EAAMgB,UAAUC,SAASb,GAClBJ,KAILkB,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACf,GACTgB,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAiB,IAAIC,EAAAA,EAAY,CACrClB,OAAQ,IAAIC,EAAAA,EACZQ,IAAKA,EACLlB,MAAO,IAAIC,EAAAA,GAAM,CACf2B,OAAQ,IAAIC,EAAAA,EAAO,CACjBzB,MAAO,2BACP0B,MAAO,QAMPC,EAAqB,SAAUC,GACnC,IAAMlB,EAAUI,EAAIe,sBAAsBD,GAAO,SAAUlB,GACzD,OAAOA,KAGHoB,EAAOC,SAASC,eAAe,QAEnCF,EAAKG,UADHvB,GACeA,EAAQC,IAAI,aAEZ,SAGfD,IAAYf,IACVA,GACF2B,EAAeY,YAAYC,cAAcxC,GAEvCe,GACFY,EAAeY,YAAYE,WAAW1B,GAExCf,EAAYe,IAIhBI,EAAIuB,GAAG,eAAe,SAAUC,GAC9B,IAAIA,EAAIC,SAAR,CAGA,IAAMX,EAAQd,EAAI0B,cAAcF,EAAIG,eACpCd,EAAmBC,OAGrBd,EAAIuB,GAAG,SAAS,SAAUC,GACxBX,EAAmBW,EAAIV,Y","sources":["webpack:///./image-vector-layer.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport VectorImageLayer from '../src/ol/layer/VectorImage.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst style = new Style({\n  fill: new Fill({\n    color: '#eeeeee',\n  }),\n});\n\nconst vectorLayer = new VectorImageLayer({\n  background: '#1a2b39',\n  imageRatio: 2,\n  source: new VectorSource({\n    url: 'https://openlayers.org/data/vector/ecoregions.json',\n    format: new GeoJSON(),\n  }),\n  style: function (feature) {\n    const color = feature.get('COLOR') || '#eeeeee';\n    style.getFill().setColor(color);\n    return style;\n  },\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: new Style({\n    stroke: new Stroke({\n      color: 'rgba(255, 255, 255, 0.7)',\n      width: 2,\n    }),\n  }),\n});\n\nlet highlight;\nconst displayFeatureInfo = function (pixel) {\n  const feature = map.forEachFeatureAtPixel(pixel, function (feature) {\n    return feature;\n  });\n\n  const info = document.getElementById('info');\n  if (feature) {\n    info.innerHTML = feature.get('ECO_NAME') || '&nbsp;';\n  } else {\n    info.innerHTML = '&nbsp;';\n  }\n\n  if (feature !== highlight) {\n    if (highlight) {\n      featureOverlay.getSource().removeFeature(highlight);\n    }\n    if (feature) {\n      featureOverlay.getSource().addFeature(feature);\n    }\n    highlight = feature;\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"names":["highlight","style","Style","fill","Fill","color","vectorLayer","VectorImageLayer","background","imageRatio","source","VectorSource","url","format","GeoJSON","feature","get","getFill","setColor","map","Map","layers","target","view","View","center","zoom","featureOverlay","VectorLayer","stroke","Stroke","width","displayFeatureInfo","pixel","forEachFeatureAtPixel","info","document","getElementById","innerHTML","getSource","removeFeature","addFeature","on","evt","dragging","getEventPixel","originalEvent"],"sourceRoot":""}