{"version":3,"file":"select-features.js","mappings":"iMASMA,EAAQ,IAAIC,EAAAA,GAAM,CACtBC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,cAILC,EAAS,IAAIC,EAAAA,EAAY,CAC7BC,OAAQ,IAAIC,EAAAA,EAAa,CACvBC,IAAK,qDACLC,OAAQ,IAAIC,EAAAA,IAEdC,WAAY,QACZZ,MAAO,SAAUa,GACf,IAAMT,EAAQS,EAAQC,IAAI,UAAY,UAEtC,OADAd,EAAMe,UAAUC,SAASZ,GAClBJ,KAILiB,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACd,GACTe,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAINC,EAAS,KAEPC,EAAW,IAAIzB,EAAAA,GAAM,CACzBC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,YAETuB,OAAQ,IAAIC,EAAAA,EAAO,CACjBxB,MAAO,2BACPyB,MAAO,MAIX,SAASC,EAAYjB,GACnB,IAAMT,EAAQS,EAAQC,IAAI,UAAY,UAEtC,OADAY,EAASX,UAAUC,SAASZ,GACrBsB,EAIT,IAAMK,EAAoB,IAAIC,EAAAA,EAAO,CAAChC,MAAO8B,IAGvCG,EAAc,IAAID,EAAAA,EAAO,CAC7BE,UAAWC,EAAAA,GACXnC,MAAO8B,IAIHM,EAAoB,IAAIJ,EAAAA,EAAO,CACnCE,UAAWG,EAAAA,GACXrC,MAAO8B,IAGHQ,EAAiB,IAAIN,EAAAA,EAAO,CAChChC,MAAO8B,EACPI,UAAW,SAAUK,GACnB,OAAOJ,EAAAA,EAAAA,IAAMI,KAAoBC,EAAAA,EAAAA,IAAWD,MAI1CE,EAAgBC,SAASC,eAAe,QAExCC,EAAoB,WACT,OAAXnB,GACFR,EAAI4B,kBAAkBpB,GAExB,IAAMqB,EAAQL,EAAcK,MAYb,QAVbrB,EADW,eAATqB,EACOf,EACS,SAATe,EACAb,EACS,eAATa,EACAV,EACS,YAATU,EACAR,EAEA,QAGTrB,EAAI8B,eAAetB,GACnBA,EAAOuB,GAAG,UAAU,SAAUC,GAC5BP,SAASC,eAAe,UAAUO,UAChC,SACAD,EAAE7B,OAAO+B,cAAcC,YACvB,+CACAH,EAAEvB,SAAS2B,OACX,mBACAJ,EAAEK,WAAWD,OACb,kBAQRZ,EAAcc,SAAWX,EACzBA,M","sources":["webpack:///./select-features.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport Select from '../src/ol/interaction/Select.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\nimport {altKeyOnly, click, pointerMove} from '../src/ol/events/condition.js';\n\nconst style = new Style({\n  fill: new Fill({\n    color: '#eeeeee',\n  }),\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'https://openlayers.org/data/vector/ecoregions.json',\n    format: new GeoJSON(),\n  }),\n  background: 'white',\n  style: function (feature) {\n    const color = feature.get('COLOR') || '#eeeeee';\n    style.getFill().setColor(color);\n    return style;\n  },\n});\n\nconst map = new Map({\n  layers: [vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nlet select = null; // ref to currently selected interaction\n\nconst selected = new Style({\n  fill: new Fill({\n    color: '#eeeeee',\n  }),\n  stroke: new Stroke({\n    color: 'rgba(255, 255, 255, 0.7)',\n    width: 2,\n  }),\n});\n\nfunction selectStyle(feature) {\n  const color = feature.get('COLOR') || '#eeeeee';\n  selected.getFill().setColor(color);\n  return selected;\n}\n\n// select interaction working on \"singleclick\"\nconst selectSingleClick = new Select({style: selectStyle});\n\n// select interaction working on \"click\"\nconst selectClick = new Select({\n  condition: click,\n  style: selectStyle,\n});\n\n// select interaction working on \"pointermove\"\nconst selectPointerMove = new Select({\n  condition: pointerMove,\n  style: selectStyle,\n});\n\nconst selectAltClick = new Select({\n  style: selectStyle,\n  condition: function (mapBrowserEvent) {\n    return click(mapBrowserEvent) && altKeyOnly(mapBrowserEvent);\n  },\n});\n\nconst selectElement = document.getElementById('type');\n\nconst changeInteraction = function () {\n  if (select !== null) {\n    map.removeInteraction(select);\n  }\n  const value = selectElement.value;\n  if (value == 'singleclick') {\n    select = selectSingleClick;\n  } else if (value == 'click') {\n    select = selectClick;\n  } else if (value == 'pointermove') {\n    select = selectPointerMove;\n  } else if (value == 'altclick') {\n    select = selectAltClick;\n  } else {\n    select = null;\n  }\n  if (select !== null) {\n    map.addInteraction(select);\n    select.on('select', function (e) {\n      document.getElementById('status').innerHTML =\n        '&nbsp;' +\n        e.target.getFeatures().getLength() +\n        ' selected features (last operation selected ' +\n        e.selected.length +\n        ' and deselected ' +\n        e.deselected.length +\n        ' features)';\n    });\n  }\n};\n\n/**\n * onchange callback on the select element.\n */\nselectElement.onchange = changeInteraction;\nchangeInteraction();\n"],"names":["style","Style","fill","Fill","color","vector","VectorLayer","source","VectorSource","url","format","GeoJSON","background","feature","get","getFill","setColor","map","Map","layers","target","view","View","center","zoom","select","selected","stroke","Stroke","width","selectStyle","selectSingleClick","Select","selectClick","condition","click","selectPointerMove","pointerMove","selectAltClick","mapBrowserEvent","altKeyOnly","selectElement","document","getElementById","changeInteraction","removeInteraction","value","addInteraction","on","e","innerHTML","getFeatures","getLength","length","deselected","onchange"],"sourceRoot":""}