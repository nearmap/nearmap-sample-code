{"version":3,"file":"custom-hit-detection-renderer.js","mappings":"woCASA,IAAMA,GAAuBC,E,QAAAA,IAAW,EAAE,SAAU,WAC9CC,EAAkB,yBAClBC,EAAY,kBAEdC,EAAqB,KAEnBC,EAAkB,SAACC,EAAKC,EAAGC,EAAGC,GAClCH,EAAII,UAAY,kBAChBJ,EAAIK,YAAcF,EAClBH,EAAIM,UAAY,EAChBN,EAAIO,UAAY,SAChBP,EAAIQ,aAAe,SACnBR,EAAIS,KAAJ,oBACAT,EAAIU,OAAS,gCACbV,EAAIW,SAASd,EAAWI,EAAGC,GAC3BF,EAAIY,WAAWf,EAAWI,EAAGC,IAGzBW,EAAgB,IAAIC,EAAAA,EAAQ,CAChCC,SAAU,IAAIC,EAAAA,EAAOtB,EAAsB,MAG7CmB,EAAcI,IAAI,cAAerB,GAEjCiB,EAAcK,SACZ,IAAIC,EAAAA,GAAM,CACRC,SADQ,SACCC,EAAaC,GACpB,QAA2BD,EAA3B,eAAQpB,EAAR,KAAWC,EAAX,iBAAgBqB,EAAhB,KAAoBC,EAApB,KACMxB,EAAMsB,EAAMG,QACZC,EAAKH,EAAKtB,EACV0B,EAAKH,EAAKtB,EACV0B,EAASC,KAAKC,KAAKJ,EAAKA,EAAKC,EAAKA,GAGlCI,EAAuB,IAATH,EAEdI,EAAWhC,EAAIiC,qBACnBhC,EACAC,EALkB,EAOlBD,EACAC,EACA6B,GAEFC,EAASE,aAAa,EAAG,mBACzBF,EAASE,aAAa,GAAK,qBAC3BF,EAASE,aAAa,EAAG,qBACzBlC,EAAImC,YACJnC,EAAIoC,IAAInC,EAAGC,EAAG0B,EAAQ,EAAG,EAAIC,KAAKQ,IAAI,GACtCrC,EAAII,UAAY4B,EAChBhC,EAAIsC,OACJtC,EAAIK,YAAc,kBAClBL,EAAIG,SAEJJ,EAAgBC,EAAKC,EAAGC,EAAGW,EAAc0B,IAAI,iBAE/CC,qBA/BQ,SA+BanB,EAAaC,GAChC,QAAeD,EAAY,GAA3B,GAAOpB,EAAP,KAAUC,EAAV,KACMF,EAAMsB,EAAMG,QAClB1B,EAAgBC,EAAKC,EAAGC,EAAGW,EAAc0B,IAAI,oBAKnD,IAAME,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAIC,EAAAA,EACZC,SAAS,IAEX,IAAIC,EAAAA,EAAY,CACdH,OAAQ,IAAII,EAAAA,EAAa,CACvBC,SAAU,CAACrC,QAIjBsC,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ5D,EACR6D,KAAM,OAIVd,EAAIe,GAAG,eAAe,SAACC,GACrB,IAAMC,EAAcjB,EAAIkB,sBAAsBF,EAAIG,OAAO,SAACC,GAExD,OADAA,EAAQ5C,IAAI,cAAe,uBACpB4C,KAGL/D,GAAsBA,GAAsB4D,GAC9C5D,EAAmBmB,IAAI,cAAerB,GAExCE,EAAqB4D,O","sources":["webpack:///./custom-hit-detection-renderer.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Circle} from '../src/ol/geom.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Style} from '../src/ol/style.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nconst columbusCircleCoords = fromLonLat([-73.98189, 40.76805]);\nconst labelTextStroke = 'rgba(120, 120, 120, 1)';\nconst labelText = 'Columbus Circle';\n\nlet pointerOverFeature = null;\n\nconst renderLabelText = (ctx, x, y, stroke) => {\n  ctx.fillStyle = 'rgba(255,0,0,1)';\n  ctx.strokeStyle = stroke;\n  ctx.lineWidth = 1;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.font = `bold 30px verdana`;\n  ctx.filter = 'drop-shadow(7px 7px 2px #e81)';\n  ctx.fillText(labelText, x, y);\n  ctx.strokeText(labelText, x, y);\n};\n\nconst circleFeature = new Feature({\n  geometry: new Circle(columbusCircleCoords, 50),\n});\n\ncircleFeature.set('label-color', labelTextStroke);\n\ncircleFeature.setStyle(\n  new Style({\n    renderer(coordinates, state) {\n      const [[x, y], [x1, y1]] = coordinates;\n      const ctx = state.context;\n      const dx = x1 - x;\n      const dy = y1 - y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n\n      const innerRadius = 0;\n      const outerRadius = radius * 1.4;\n\n      const gradient = ctx.createRadialGradient(\n        x,\n        y,\n        innerRadius,\n        x,\n        y,\n        outerRadius\n      );\n      gradient.addColorStop(0, 'rgba(255,0,0,0)');\n      gradient.addColorStop(0.6, 'rgba(255,0,0,0.2)');\n      gradient.addColorStop(1, 'rgba(255,0,0,0.8)');\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, 2 * Math.PI, true);\n      ctx.fillStyle = gradient;\n      ctx.fill();\n      ctx.strokeStyle = 'rgba(255,0,0,1)';\n      ctx.stroke();\n\n      renderLabelText(ctx, x, y, circleFeature.get('label-color'));\n    },\n    hitDetectionRenderer(coordinates, state) {\n      const [x, y] = coordinates[0];\n      const ctx = state.context;\n      renderLabelText(ctx, x, y, circleFeature.get('label-color'));\n    },\n  })\n);\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n      visible: true,\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        features: [circleFeature],\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: columbusCircleCoords,\n    zoom: 19,\n  }),\n});\n\nmap.on('pointermove', (evt) => {\n  const featureOver = map.forEachFeatureAtPixel(evt.pixel, (feature) => {\n    feature.set('label-color', 'rgba(255,255,255,1)');\n    return feature;\n  });\n\n  if (pointerOverFeature && pointerOverFeature != featureOver) {\n    pointerOverFeature.set('label-color', labelTextStroke);\n  }\n  pointerOverFeature = featureOver;\n});\n"],"names":["columbusCircleCoords","fromLonLat","labelTextStroke","labelText","pointerOverFeature","renderLabelText","ctx","x","y","stroke","fillStyle","strokeStyle","lineWidth","textAlign","textBaseline","font","filter","fillText","strokeText","circleFeature","Feature","geometry","Circle","set","setStyle","Style","renderer","coordinates","state","x1","y1","context","dx","dy","radius","Math","sqrt","outerRadius","gradient","createRadialGradient","addColorStop","beginPath","arc","PI","fill","get","hitDetectionRenderer","map","Map","layers","TileLayer","source","OSM","visible","VectorLayer","VectorSource","features","target","view","View","center","zoom","on","evt","featureOver","forEachFeatureAtPixel","pixel","feature"],"sourceRoot":""}