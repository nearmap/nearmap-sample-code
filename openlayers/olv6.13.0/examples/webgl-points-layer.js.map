{"version":3,"file":"webgl-points-layer.js","mappings":"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","sources":["webpack:///./webgl-points-layer.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport Vector from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport WebGLPointsLayer from '../src/ol/layer/WebGLPoints.js';\n\nconst vectorSource = new Vector({\n  url: 'data/geojson/world-cities.geojson',\n  format: new GeoJSON(),\n});\n\nconst predefinedStyles = {\n  'icons': {\n    symbol: {\n      symbolType: 'image',\n      src: 'data/icon.png',\n      size: [18, 28],\n      color: 'lightyellow',\n      rotateWithView: false,\n      offset: [0, 9],\n    },\n  },\n  'triangles': {\n    symbol: {\n      symbolType: 'triangle',\n      size: 18,\n      color: [\n        'interpolate',\n        ['linear'],\n        ['get', 'population'],\n        20000,\n        '#5aca5b',\n        300000,\n        '#ff6a19',\n      ],\n      rotateWithView: true,\n    },\n  },\n  'triangles-latitude': {\n    symbol: {\n      symbolType: 'triangle',\n      size: [\n        'interpolate',\n        ['linear'],\n        ['get', 'population'],\n        40000,\n        12,\n        2000000,\n        24,\n      ],\n      color: [\n        'interpolate',\n        ['linear'],\n        ['get', 'latitude'],\n        -60,\n        '#ff14c3',\n        -20,\n        '#ff621d',\n        20,\n        '#ffed02',\n        60,\n        '#00ff67',\n      ],\n      offset: [0, 0],\n      opacity: 0.95,\n    },\n  },\n  'circles': {\n    symbol: {\n      symbolType: 'circle',\n      size: [\n        'interpolate',\n        ['linear'],\n        ['get', 'population'],\n        40000,\n        8,\n        2000000,\n        28,\n      ],\n      color: '#006688',\n      rotateWithView: false,\n      offset: [0, 0],\n      opacity: [\n        'interpolate',\n        ['linear'],\n        ['get', 'population'],\n        40000,\n        0.6,\n        2000000,\n        0.92,\n      ],\n    },\n  },\n  'circles-zoom': {\n    symbol: {\n      symbolType: 'circle',\n      size: ['interpolate', ['exponential', 2.5], ['zoom'], 2, 1, 14, 32],\n      color: '#240572',\n      offset: [0, 0],\n      opacity: 0.95,\n    },\n  },\n  'rotating-bars': {\n    symbol: {\n      symbolType: 'square',\n      rotation: ['*', ['time'], 0.1],\n      size: [\n        'array',\n        4,\n        [\n          'interpolate',\n          ['linear'],\n          ['get', 'population'],\n          20000,\n          4,\n          300000,\n          28,\n        ],\n      ],\n      color: [\n        'interpolate',\n        ['linear'],\n        ['get', 'population'],\n        20000,\n        '#ffdc00',\n        300000,\n        '#ff5b19',\n      ],\n      offset: [\n        'array',\n        0,\n        [\n          'interpolate',\n          ['linear'],\n          ['get', 'population'],\n          20000,\n          2,\n          300000,\n          14,\n        ],\n      ],\n    },\n  },\n};\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nlet literalStyle;\nlet pointsLayer;\nfunction refreshLayer(newStyle) {\n  const previousLayer = pointsLayer;\n  pointsLayer = new WebGLPointsLayer({\n    source: vectorSource,\n    style: newStyle,\n    disableHitDetection: true,\n  });\n  map.addLayer(pointsLayer);\n\n  if (previousLayer) {\n    map.removeLayer(previousLayer);\n    previousLayer.dispose();\n  }\n  literalStyle = newStyle;\n}\n\nconst spanValid = document.getElementById('style-valid');\nconst spanInvalid = document.getElementById('style-invalid');\nfunction setStyleStatus(errorMsg) {\n  const isError = typeof errorMsg === 'string';\n  spanValid.style.display = errorMsg === null ? 'initial' : 'none';\n  spanInvalid.firstElementChild.innerText = isError ? errorMsg : '';\n  spanInvalid.style.display = isError ? 'initial' : 'none';\n}\n\nconst editor = document.getElementById('style-editor');\neditor.addEventListener('input', function () {\n  const textStyle = editor.value;\n  try {\n    const newLiteralStyle = JSON.parse(textStyle);\n    if (JSON.stringify(newLiteralStyle) !== JSON.stringify(literalStyle)) {\n      refreshLayer(newLiteralStyle);\n    }\n    setStyleStatus(null);\n  } catch (e) {\n    setStyleStatus(e.message);\n  }\n});\n\nconst select = document.getElementById('style-select');\nselect.value = 'circles';\nfunction onSelectChange() {\n  const style = select.value;\n  const newLiteralStyle = predefinedStyles[style];\n  editor.value = JSON.stringify(newLiteralStyle, null, 2);\n  try {\n    refreshLayer(newLiteralStyle);\n    setStyleStatus();\n  } catch (e) {\n    setStyleStatus(e.message);\n  }\n}\nonSelectChange();\nselect.addEventListener('change', onSelectChange);\n\n// animate the map\nfunction animate() {\n  map.render();\n  window.requestAnimationFrame(animate);\n}\nanimate();\n"],"names":["literalStyle","pointsLayer","vectorSource","Vector","url","format","GeoJSON","predefinedStyles","symbol","symbolType","src","size","color","rotateWithView","offset","opacity","rotation","map","Map","layers","TileLayer","source","OSM","target","document","getElementById","view","View","center","zoom","refreshLayer","newStyle","previousLayer","WebGLPointsLayer","style","disableHitDetection","addLayer","removeLayer","dispose","spanValid","spanInvalid","setStyleStatus","errorMsg","isError","display","firstElementChild","innerText","editor","addEventListener","textStyle","value","newLiteralStyle","JSON","parse","stringify","e","message","select","onSelectChange","animate","render","window","requestAnimationFrame"],"sourceRoot":""}