{"version":3,"file":"layer-group.js","mappings":"oKAOMA,EACJ,8FAgDF,SAASC,EAAMC,EAAIC,GACjBA,EAAMC,YAAYC,SAAQ,SAAUC,EAAOC,GACzC,IAAMC,EAAUN,EAAKK,GAfzB,SAAoBC,EAASF,GAC3B,IAAMG,EAAkBC,EAAEF,EAAU,kBACpCC,EAAgBE,GAAG,UAAU,WAC3BL,EAAMM,WAAWC,KAAKC,YAExBL,EAAgBM,KAAK,UAAWT,EAAMU,cAEtC,IAAMC,EAAeP,EAAEF,EAAU,kBACjCS,EAAaN,GAAG,gBAAgB,WAC9BL,EAAMY,WAAWC,WAAWN,KAAKO,WAEnCH,EAAaI,IAAIC,OAAOhB,EAAMiB,eAK5BC,CAAWhB,EAASF,GAChBA,aAAiBmB,EAAAA,GACnBxB,EAAMO,EAASF,MAIrBL,CAAM,SAvDM,IAAIyB,EAAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAIC,EAAAA,IAEd,IAAIL,EAAAA,EAAW,CACbE,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAIE,EAAAA,EAAS,CACnBC,IACE,sGACAhC,EACFiC,YAAa,gBAGjB,IAAIL,EAAAA,EAAU,CACZC,OAAQ,IAAIE,EAAAA,EAAS,CACnBC,IACE,uFACAhC,EACFiC,YAAa,oBAMvBC,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,QAAQC,EAAAA,EAAAA,IAAW,CAAC,QAAS,UAC7BC,KAAM,MA0BUC,iBAEpB9B,EAAE,wBACC+B,OAAM,WACL/B,EAAEG,MAAM6B,SAAS,YAAYC,YAE9BD,SAAS,YACTE,S","sources":["webpack:///./layer-group.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileJSON from '../src/ol/source/TileJSON.js';\nimport View from '../src/ol/View.js';\nimport {Group as LayerGroup, Tile as TileLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nconst key =\n  'pk.eyJ1IjoiYWhvY2V2YXIiLCJhIjoiY2t0cGdwMHVnMGdlbzMxbDhwazBic2xrNSJ9.WbcTL9uj8JPAsnT9mgb7oQ';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    new LayerGroup({\n      layers: [\n        new TileLayer({\n          source: new TileJSON({\n            url:\n              'https://api.tiles.mapbox.com/v4/mapbox.20110804-hoa-foodinsecurity-3month.json?secure&access_token=' +\n              key,\n            crossOrigin: 'anonymous',\n          }),\n        }),\n        new TileLayer({\n          source: new TileJSON({\n            url:\n              'https://api.tiles.mapbox.com/v4/mapbox.world-borders-light.json?secure&access_token=' +\n              key,\n            crossOrigin: 'anonymous',\n          }),\n        }),\n      ],\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([37.4057, 8.81566]),\n    zoom: 4,\n  }),\n});\n\nfunction bindInputs(layerid, layer) {\n  const visibilityInput = $(layerid + ' input.visible');\n  visibilityInput.on('change', function () {\n    layer.setVisible(this.checked);\n  });\n  visibilityInput.prop('checked', layer.getVisible());\n\n  const opacityInput = $(layerid + ' input.opacity');\n  opacityInput.on('input change', function () {\n    layer.setOpacity(parseFloat(this.value));\n  });\n  opacityInput.val(String(layer.getOpacity()));\n}\nfunction setup(id, group) {\n  group.getLayers().forEach(function (layer, i) {\n    const layerid = id + i;\n    bindInputs(layerid, layer);\n    if (layer instanceof LayerGroup) {\n      setup(layerid, layer);\n    }\n  });\n}\nsetup('#layer', map.getLayerGroup());\n\n$('#layertree li > span')\n  .click(function () {\n    $(this).siblings('fieldset').toggle();\n  })\n  .siblings('fieldset')\n  .hide();\n"],"names":["key","setup","id","group","getLayers","forEach","layer","i","layerid","visibilityInput","$","on","setVisible","this","checked","prop","getVisible","opacityInput","setOpacity","parseFloat","value","val","String","getOpacity","bindInputs","LayerGroup","Map","layers","TileLayer","source","OSM","TileJSON","url","crossOrigin","target","view","View","center","fromLonLat","zoom","getLayerGroup","click","siblings","toggle","hide"],"sourceRoot":""}