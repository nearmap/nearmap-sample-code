{"version":3,"file":"sea-level.js","mappings":"mKAuBA,IAAMA,EAAM,oCAKNC,EAAY,IAAIC,EAAAA,EAAI,CAGxBC,IAAK,kEAAoEH,EACzEI,SAAU,IACVC,QAAS,GACTC,YAAa,GACbC,aAAa,IAGTC,EAAS,IAAIC,EAAAA,GAAa,CAC9BC,QAAS,CAACT,GACVU,UAlCF,SAAeC,EAAQC,GACrB,IAAMC,EAAQF,EAAO,GAarB,OAZIE,EAAM,KAEwD,IAAzC,IAAXA,EAAM,GAAW,IAAiB,IAAXA,EAAM,GAAWA,EAAM,IAAvD,KACWD,EAAKE,OACjBD,EAAM,GAAK,IACXA,EAAM,GAAK,IACXA,EAAM,GAAK,IACXA,EAAM,GAAK,KAEXA,EAAM,GAAK,GAGRA,KAuBHE,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,MACRC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAInB,EAAAA,EAAI,CACdoB,aAvBN,4LAwBMnB,IAAK,6DAA+DH,EACpEI,SAAU,IACVC,QAAS,OAGb,IAAIkB,EAAAA,EAAW,CACbC,QAAS,GACTH,OAAQb,KAGZiB,KAAM,IAAIC,EAAAA,GAAK,CACbC,QAAQC,EAAAA,EAAAA,IAAW,EAAE,SAAU,UAC/BC,KAAM,OAIJC,EAAUC,SAASC,eAAe,SAClCC,EAASF,SAASC,eAAe,UACjCE,EAAW,WACfD,EAAOE,UAAYL,EAAQM,MAC3B5B,EAAO6B,WAETP,EAAQQ,iBAAiB,QAASJ,GAClCJ,EAAQQ,iBAAiB,SAAUJ,GACnCD,EAAOE,UAAYL,EAAQM,MAE3B5B,EAAO+B,GAAG,oBAAoB,SAAUC,GACtCA,EAAM3B,KAAKE,MAAQe,EAAQM,SAI7B,IADA,IAAMK,EAAYV,SAASW,uBAAuB,YACzCC,EAAI,EAAGC,EAAKH,EAAUI,OAAQF,EAAIC,IAAMD,EAC/CF,EAAUE,GAAGL,iBAAiB,QAASQ,GAGzC,SAASA,EAASN,GAChB,IAAM3B,EAAO2B,EAAMtB,OAAO6B,QACpBtB,EAAOT,EAAIgC,UACjBvB,EAAKwB,WAAUrB,EAAAA,EAAAA,IAAWf,EAAKc,OAAOuB,MAAM,KAAKlC,IAAImC,UACrD1B,EAAK2B,QAAQD,OAAOtC,EAAKgB,U","sources":["webpack:///./sea-level.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Image as ImageLayer, Tile as TileLayer} from '../src/ol/layer.js';\nimport {Raster as RasterSource, XYZ} from '../src/ol/source.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nfunction flood(pixels, data) {\n  const pixel = pixels[0];\n  if (pixel[3]) {\n    const height =\n      -10000 + (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1;\n    if (height <= data.level) {\n      pixel[0] = 134;\n      pixel[1] = 203;\n      pixel[2] = 249;\n      pixel[3] = 255;\n    } else {\n      pixel[3] = 0;\n    }\n  }\n  return pixel;\n}\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst elevation = new XYZ({\n  // The RGB values in the source collectively represent elevation.\n  // Interpolation of individual colors would produce incorrect evelations and is disabled.\n  url: 'https://api.maptiler.com/tiles/terrain-rgb/{z}/{x}/{y}.png?key=' + key,\n  tileSize: 512,\n  maxZoom: 12,\n  crossOrigin: '',\n  interpolate: false,\n});\n\nconst raster = new RasterSource({\n  sources: [elevation],\n  operation: flood,\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new XYZ({\n        attributions: attributions,\n        url: 'https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=' + key,\n        tileSize: 512,\n        maxZoom: 22,\n      }),\n    }),\n    new ImageLayer({\n      opacity: 0.6,\n      source: raster,\n    }),\n  ],\n  view: new View({\n    center: fromLonLat([-122.3267, 37.8377]),\n    zoom: 11,\n  }),\n});\n\nconst control = document.getElementById('level');\nconst output = document.getElementById('output');\nconst listener = function () {\n  output.innerText = control.value;\n  raster.changed();\n};\ncontrol.addEventListener('input', listener);\ncontrol.addEventListener('change', listener);\noutput.innerText = control.value;\n\nraster.on('beforeoperations', function (event) {\n  event.data.level = control.value;\n});\n\nconst locations = document.getElementsByClassName('location');\nfor (let i = 0, ii = locations.length; i < ii; ++i) {\n  locations[i].addEventListener('click', relocate);\n}\n\nfunction relocate(event) {\n  const data = event.target.dataset;\n  const view = map.getView();\n  view.setCenter(fromLonLat(data.center.split(',').map(Number)));\n  view.setZoom(Number(data.zoom));\n}\n"],"names":["key","elevation","XYZ","url","tileSize","maxZoom","crossOrigin","interpolate","raster","RasterSource","sources","operation","pixels","data","pixel","level","map","Map","target","layers","TileLayer","source","attributions","ImageLayer","opacity","view","View","center","fromLonLat","zoom","control","document","getElementById","output","listener","innerText","value","changed","addEventListener","on","event","locations","getElementsByClassName","i","ii","length","relocate","dataset","getView","setCenter","split","Number","setZoom"],"sourceRoot":""}