{"version":3,"file":"projection-and-scale.js","mappings":"kKAWMA,EAAiBC,SAASC,eAAe,mBACzCC,GAAaC,EAAAA,EAAAA,IAAcJ,EAAeK,OAE1CC,EAAe,IAAIC,EAAAA,EAAU,CACjCC,MAAO,SACPC,KAAK,EACLC,MAAO,EACPC,MAAM,EACNC,SAAU,MAGNC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,UAAUC,EAAAA,EAAAA,MAAkBC,OAAO,CAACX,IACpCY,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAIC,EAAAA,KAGhBC,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,QAAQC,EAAAA,EAAAA,IAAU,CAAC,EAAG,IAAK,YAAavB,GACxCwB,KAAM,EACNxB,WAAYA,MAkChBH,EAAe4B,iBAAiB,UA9BhC,WACE,IAAMC,EAAchB,EAAIiB,UAClBC,EAAoBF,EAAYzB,gBAChC4B,GAAgB5B,EAAAA,EAAAA,IAAcJ,EAAeK,OAC7C4B,EAAoBJ,EAAYK,gBAChCC,EAAgBN,EAAYO,YAC5BC,EAAkBR,EAAYS,cAC9BC,GAAYb,EAAAA,EAAAA,IAAUS,EAAeJ,EAAmBC,GAaxDQ,EACHP,GAb4BQ,EAAAA,EAAAA,IAC7BV,EACA,EACAI,EACA,MAEyBM,EAAAA,EAAAA,IACzBT,EACA,EACAO,EACA,KAIIG,EAAU,IAAIlB,EAAAA,GAAK,CACvBC,OAAQc,EACRI,WAAYH,EACZI,SAAUP,EACVlC,WAAY6B,IAEdnB,EAAIgC,QAAQH,Q","sources":["webpack:///./projection-and-scale.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\nimport {ScaleLine, defaults as defaultControls} from '../src/ol/control.js';\nimport {\n  getPointResolution,\n  get as getProjection,\n  transform,\n} from '../src/ol/proj.js';\n\nconst viewProjSelect = document.getElementById('view-projection');\nconst projection = getProjection(viewProjSelect.value);\n\nconst scaleControl = new ScaleLine({\n  units: 'metric',\n  bar: true,\n  steps: 4,\n  text: true,\n  minWidth: 140,\n});\n\nconst map = new Map({\n  controls: defaultControls().extend([scaleControl]),\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: transform([0, 52], 'EPSG:4326', projection),\n    zoom: 6,\n    projection: projection,\n  }),\n});\n\nfunction onChangeProjection() {\n  const currentView = map.getView();\n  const currentProjection = currentView.getProjection();\n  const newProjection = getProjection(viewProjSelect.value);\n  const currentResolution = currentView.getResolution();\n  const currentCenter = currentView.getCenter();\n  const currentRotation = currentView.getRotation();\n  const newCenter = transform(currentCenter, currentProjection, newProjection);\n  const currentPointResolution = getPointResolution(\n    currentProjection,\n    1,\n    currentCenter,\n    'm'\n  );\n  const newPointResolution = getPointResolution(\n    newProjection,\n    1,\n    newCenter,\n    'm'\n  );\n  const newResolution =\n    (currentResolution * currentPointResolution) / newPointResolution;\n  const newView = new View({\n    center: newCenter,\n    resolution: newResolution,\n    rotation: currentRotation,\n    projection: newProjection,\n  });\n  map.setView(newView);\n}\nviewProjSelect.addEventListener('change', onChangeProjection);\n"],"names":["viewProjSelect","document","getElementById","projection","getProjection","value","scaleControl","ScaleLine","units","bar","steps","text","minWidth","map","Map","controls","defaultControls","extend","layers","TileLayer","source","OSM","target","view","View","center","transform","zoom","addEventListener","currentView","getView","currentProjection","newProjection","currentResolution","getResolution","currentCenter","getCenter","currentRotation","getRotation","newCenter","newResolution","getPointResolution","newView","resolution","rotation","setView"],"sourceRoot":""}