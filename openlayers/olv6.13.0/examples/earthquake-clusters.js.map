{"version":3,"file":"earthquake-clusters.js","mappings":"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","sources":["webpack:///./earthquake-clusters.js"],"sourcesContent":["import KML from '../src/ol/format/KML.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {\n  Circle as CircleStyle,\n  Fill,\n  RegularShape,\n  Stroke,\n  Style,\n  Text,\n} from '../src/ol/style.js';\nimport {Cluster, Stamen, Vector as VectorSource} from '../src/ol/source.js';\nimport {\n  Select,\n  defaults as defaultInteractions,\n} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {createEmpty, extend, getHeight, getWidth} from '../src/ol/extent.js';\n\nconst earthquakeFill = new Fill({\n  color: 'rgba(255, 153, 0, 0.8)',\n});\nconst earthquakeStroke = new Stroke({\n  color: 'rgba(255, 204, 0, 0.2)',\n  width: 1,\n});\nconst textFill = new Fill({\n  color: '#fff',\n});\nconst textStroke = new Stroke({\n  color: 'rgba(0, 0, 0, 0.6)',\n  width: 3,\n});\nconst invisibleFill = new Fill({\n  color: 'rgba(255, 255, 255, 0.01)',\n});\n\nfunction createEarthquakeStyle(feature) {\n  // 2012_Earthquakes_Mag5.kml stores the magnitude of each earthquake in a\n  // standards-violating <magnitude> tag in each Placemark.  We extract it\n  // from the Placemark's name instead.\n  const name = feature.get('name');\n  const magnitude = parseFloat(name.substr(2));\n  const radius = 5 + 20 * (magnitude - 5);\n\n  return new Style({\n    geometry: feature.getGeometry(),\n    image: new RegularShape({\n      radius1: radius,\n      radius2: 3,\n      points: 5,\n      angle: Math.PI,\n      fill: earthquakeFill,\n      stroke: earthquakeStroke,\n    }),\n  });\n}\n\nlet maxFeatureCount;\nlet vector = null;\nconst calculateClusterInfo = function (resolution) {\n  maxFeatureCount = 0;\n  const features = vector.getSource().getFeatures();\n  let feature, radius;\n  for (let i = features.length - 1; i >= 0; --i) {\n    feature = features[i];\n    const originalFeatures = feature.get('features');\n    const extent = createEmpty();\n    let j, jj;\n    for (j = 0, jj = originalFeatures.length; j < jj; ++j) {\n      extend(extent, originalFeatures[j].getGeometry().getExtent());\n    }\n    maxFeatureCount = Math.max(maxFeatureCount, jj);\n    radius = (0.25 * (getWidth(extent) + getHeight(extent))) / resolution;\n    feature.set('radius', radius);\n  }\n};\n\nlet currentResolution;\nfunction styleFunction(feature, resolution) {\n  if (resolution != currentResolution) {\n    calculateClusterInfo(resolution);\n    currentResolution = resolution;\n  }\n  let style;\n  const size = feature.get('features').length;\n  if (size > 1) {\n    style = new Style({\n      image: new CircleStyle({\n        radius: feature.get('radius'),\n        fill: new Fill({\n          color: [255, 153, 0, Math.min(0.8, 0.4 + size / maxFeatureCount)],\n        }),\n      }),\n      text: new Text({\n        text: size.toString(),\n        fill: textFill,\n        stroke: textStroke,\n      }),\n    });\n  } else {\n    const originalFeature = feature.get('features')[0];\n    style = createEarthquakeStyle(originalFeature);\n  }\n  return style;\n}\n\nfunction selectStyleFunction(feature) {\n  const styles = [\n    new Style({\n      image: new CircleStyle({\n        radius: feature.get('radius'),\n        fill: invisibleFill,\n      }),\n    }),\n  ];\n  const originalFeatures = feature.get('features');\n  let originalFeature;\n  for (let i = originalFeatures.length - 1; i >= 0; --i) {\n    originalFeature = originalFeatures[i];\n    styles.push(createEarthquakeStyle(originalFeature));\n  }\n  return styles;\n}\n\nvector = new VectorLayer({\n  source: new Cluster({\n    distance: 40,\n    source: new VectorSource({\n      url: 'data/kml/2012_Earthquakes_Mag5.kml',\n      format: new KML({\n        extractStyles: false,\n      }),\n    }),\n  }),\n  style: styleFunction,\n});\n\nconst raster = new TileLayer({\n  source: new Stamen({\n    layer: 'toner',\n  }),\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  interactions: defaultInteractions().extend([\n    new Select({\n      condition: function (evt) {\n        return evt.type == 'pointermove' || evt.type == 'singleclick';\n      },\n      style: selectStyleFunction,\n    }),\n  ]),\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"names":["maxFeatureCount","earthquakeFill","Fill","color","earthquakeStroke","Stroke","width","textFill","textStroke","invisibleFill","createEarthquakeStyle","feature","name","get","radius","parseFloat","substr","Style","geometry","getGeometry","image","RegularShape","radius1","radius2","points","angle","Math","PI","fill","stroke","currentResolution","vector","VectorLayer","source","Cluster","distance","VectorSource","url","format","KML","extractStyles","style","resolution","features","getSource","getFeatures","i","length","jj","originalFeatures","extent","createEmpty","j","extend","getExtent","max","getWidth","getHeight","set","calculateClusterInfo","size","CircleStyle","min","text","Text","toString","raster","TileLayer","Stamen","layer","Map","layers","interactions","defaultInteractions","Select","condition","evt","type","originalFeature","styles","push","target","view","View","center","zoom"],"sourceRoot":""}