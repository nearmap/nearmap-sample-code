{"version":3,"file":"draw-shapes.js","mappings":"8FA+BIA,E,gFArBEC,EAAS,IAAIC,EAAAA,EAAU,CAC3BC,OAAQ,IAAIC,EAAAA,IAGRD,EAAS,IAAIE,EAAAA,EAAa,CAACC,OAAO,IAElCC,EAAS,IAAIC,EAAAA,EAAY,CAC7BL,OAAQA,IAGJM,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACV,EAAQM,GACjBK,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,EAAE,KAAU,MACpBC,KAAM,MAIJC,EAAaC,SAASC,eAAe,QAG3C,SAASC,IACP,IAEMC,EAFFC,EAAQL,EAAWK,MACT,SAAVA,IAEY,WAAVA,GACFA,EAAQ,SACRD,GAAmBE,EAAAA,EAAAA,IAAqB,IACrB,QAAVD,GACTA,EAAQ,SACRD,GAAmBG,EAAAA,EAAAA,OACA,SAAVF,IACTA,EAAQ,SACRD,EAAmB,SAAUI,EAAaC,GASxC,IARA,IAAMX,EAASU,EAAY,GACrBE,EAAOF,EAAYA,EAAYG,OAAS,GACxCC,EAAKd,EAAO,GAAKY,EAAK,GACtBG,EAAKf,EAAO,GAAKY,EAAK,GACtBI,EAASC,KAAKC,KAAKJ,EAAKA,EAAKC,EAAKA,GAClCI,EAAWF,KAAKG,MAAML,EAAID,GAC1BO,EAAiB,GAEdC,EAAI,EAAGA,EADE,KACeA,EAAG,CAClC,IAAMC,EAAQJ,EAAgB,EAAJG,EAAQL,KAAKO,GAFvB,GAGVC,EAAWH,EAAI,GAAM,EAAI,EAAI,GAC7BI,EAAUV,EAASS,EAAWR,KAAKU,IAAIJ,GACvCK,EAAUZ,EAASS,EAAWR,KAAKY,IAAIN,GAC7CF,EAAeS,KAAK,CAAC9B,EAAO,GAAK0B,EAAS1B,EAAO,GAAK4B,IAQxD,OANAP,EAAeS,KAAKT,EAAe,GAAGU,SACjCpB,EAGHA,EAASqB,eAAe,CAACX,IAFzBV,EAAW,IAAIsB,EAAAA,GAAQ,CAACZ,IAInBV,IAGX1B,EAAO,IAAIiD,EAAAA,GAAK,CACd9C,OAAQA,EACR+C,KAAM5B,EACND,iBAAkBA,IAEpBZ,EAAIW,eAAepB,IAOvBiB,EAAWkC,SAAW,WACpB1C,EAAI2C,kBAAkBpD,GACtBoB,KAGFF,SAASC,eAAe,QAAQkC,iBAAiB,SAAS,WACxDrD,EAAKsD,qBAGPlC,M","sources":["webpack:///./draw-shapes.js"],"sourcesContent":["import Draw, {\n  createBox,\n  createRegularPolygon,\n} from '../src/ol/interaction/Draw.js';\nimport Map from '../src/ol/Map.js';\nimport Polygon from '../src/ol/geom/Polygon.js';\nimport View from '../src/ol/View.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst source = new VectorSource({wrapX: false});\n\nconst vector = new VectorLayer({\n  source: source,\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4,\n  }),\n});\n\nconst typeSelect = document.getElementById('type');\n\nlet draw; // global so we can remove it later\nfunction addInteraction() {\n  let value = typeSelect.value;\n  if (value !== 'None') {\n    let geometryFunction;\n    if (value === 'Square') {\n      value = 'Circle';\n      geometryFunction = createRegularPolygon(4);\n    } else if (value === 'Box') {\n      value = 'Circle';\n      geometryFunction = createBox();\n    } else if (value === 'Star') {\n      value = 'Circle';\n      geometryFunction = function (coordinates, geometry) {\n        const center = coordinates[0];\n        const last = coordinates[coordinates.length - 1];\n        const dx = center[0] - last[0];\n        const dy = center[1] - last[1];\n        const radius = Math.sqrt(dx * dx + dy * dy);\n        const rotation = Math.atan2(dy, dx);\n        const newCoordinates = [];\n        const numPoints = 12;\n        for (let i = 0; i < numPoints; ++i) {\n          const angle = rotation + (i * 2 * Math.PI) / numPoints;\n          const fraction = i % 2 === 0 ? 1 : 0.5;\n          const offsetX = radius * fraction * Math.cos(angle);\n          const offsetY = radius * fraction * Math.sin(angle);\n          newCoordinates.push([center[0] + offsetX, center[1] + offsetY]);\n        }\n        newCoordinates.push(newCoordinates[0].slice());\n        if (!geometry) {\n          geometry = new Polygon([newCoordinates]);\n        } else {\n          geometry.setCoordinates([newCoordinates]);\n        }\n        return geometry;\n      };\n    }\n    draw = new Draw({\n      source: source,\n      type: value,\n      geometryFunction: geometryFunction,\n    });\n    map.addInteraction(draw);\n  }\n}\n\n/**\n * Handle change event.\n */\ntypeSelect.onchange = function () {\n  map.removeInteraction(draw);\n  addInteraction();\n};\n\ndocument.getElementById('undo').addEventListener('click', function () {\n  draw.removeLastPoint();\n});\n\naddInteraction();\n"],"names":["draw","raster","TileLayer","source","OSM","VectorSource","wrapX","vector","VectorLayer","map","Map","layers","target","view","View","center","zoom","typeSelect","document","getElementById","addInteraction","geometryFunction","value","createRegularPolygon","createBox","coordinates","geometry","last","length","dx","dy","radius","Math","sqrt","rotation","atan2","newCoordinates","i","angle","PI","fraction","offsetX","cos","offsetY","sin","push","slice","setCoordinates","Polygon","Draw","type","onchange","removeInteraction","addEventListener","removeLastPoint"],"sourceRoot":""}