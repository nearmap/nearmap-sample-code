{"version":3,"file":"wms-image-custom-proj.js","mappings":"kMAuBAA,EAAAA,EAAAA,KACE,aACA,yLAIFC,EAAAA,EAAAA,GAASD,EAAAA,GAET,IAAME,EAAa,IAAIC,EAAAA,EAAW,CAChCC,KAAM,aACNC,OAAQ,CAAC,YAAa,WAAY,YAAa,eAG3CA,EAAS,CAAC,KAAQ,IAAO,IAAQ,MACjCC,EAAS,CACb,IAAIC,EAAAA,EAAW,CACbF,OAAQA,EACRG,OAAQ,IAAIC,EAAAA,EAAS,CACnBC,IAAK,4BACLC,YAAa,YACbC,aACE,oIAEFC,OAAQ,CACN,OAAU,+CACV,OAAU,cAEZC,WAAY,gBAGhB,IAAIP,EAAAA,EAAW,CACbF,OAAQA,EACRG,OAAQ,IAAIC,EAAAA,EAAS,CACnBC,IAAK,4BACLC,YAAa,YACbC,aACE,kIAEFC,OAAQ,CAAC,OAAU,uCACnBC,WAAY,iBAKN,IAAIC,EAAAA,EAAI,CAClBC,UAAUC,EAAAA,EAAAA,MAAkBC,OAAO,CAAC,IAAIC,EAAAA,IACxCb,OAAQA,EACRc,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbpB,WAAYA,EACZqB,QAAQC,EAAAA,EAAAA,IAAW,CAAC,KAAM,OAAQtB,GAClCG,OAAQA,EACRoB,KAAM,Q","sources":["webpack:///./wms-image-custom-proj.js"],"sourcesContent":["import ImageLayer from '../src/ol/layer/Image.js';\nimport ImageWMS from '../src/ol/source/ImageWMS.js';\nimport Map from '../src/ol/Map.js';\nimport Projection from '../src/ol/proj/Projection.js';\nimport View from '../src/ol/View.js';\nimport proj4 from 'proj4';\nimport {ScaleLine, defaults as defaultControls} from '../src/ol/control.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport {register} from '../src/ol/proj/proj4.js';\n\n// Transparent Proj4js support:\n//\n// EPSG:21781 is known to Proj4js because its definition is registered by\n// calling proj4.defs(). Now when we create an ol/proj/Projection instance with\n// the 'EPSG:21781' code, OpenLayers will pick up the transform functions from\n// Proj4js. To get the registered ol/proj/Projection instance with other\n// parameters like units and axis orientation applied from Proj4js, use\n// `ol/proj#get('EPSG:21781')`.\n//\n// Note that we are setting the projection's extent here, which is used to\n// determine the view resolution for zoom level 0. Recommended values for a\n// projection's validity extent can be found at https://epsg.io/.\n\nproj4.defs(\n  'EPSG:21781',\n  '+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 ' +\n    '+x_0=600000 +y_0=200000 +ellps=bessel ' +\n    '+towgs84=660.077,13.551,369.344,2.484,1.783,2.939,5.66 +units=m +no_defs'\n);\nregister(proj4);\n\nconst projection = new Projection({\n  code: 'EPSG:21781',\n  extent: [485869.5728, 76443.1884, 837076.5648, 299941.7864],\n});\n\nconst extent = [420000, 30000, 900000, 350000];\nconst layers = [\n  new ImageLayer({\n    extent: extent,\n    source: new ImageWMS({\n      url: 'https://wms.geo.admin.ch/',\n      crossOrigin: 'anonymous',\n      attributions:\n        '© <a href=\"https://shop.swisstopo.admin.ch/en/products/maps/national/lk1000\"' +\n        'target=\"_blank\">Pixelmap 1:1000000 / geo.admin.ch</a>',\n      params: {\n        'LAYERS': 'ch.swisstopo.pixelkarte-farbe-pk1000.noscale',\n        'FORMAT': 'image/jpeg',\n      },\n      serverType: 'mapserver',\n    }),\n  }),\n  new ImageLayer({\n    extent: extent,\n    source: new ImageWMS({\n      url: 'https://wms.geo.admin.ch/',\n      crossOrigin: 'anonymous',\n      attributions:\n        '© <a href=\"https://www.hydrodaten.admin.ch/en/notes-on-the-flood-alert-maps.html\"' +\n        'target=\"_blank\">Flood Alert / geo.admin.ch</a>',\n      params: {'LAYERS': 'ch.bafu.hydroweb-warnkarte_national'},\n      serverType: 'mapserver',\n    }),\n  }),\n];\n\nconst map = new Map({\n  controls: defaultControls().extend([new ScaleLine()]),\n  layers: layers,\n  target: 'map',\n  view: new View({\n    projection: projection,\n    center: fromLonLat([8.23, 46.86], projection),\n    extent: extent,\n    zoom: 2,\n  }),\n});\n"],"names":["proj4","register","projection","Projection","code","extent","layers","ImageLayer","source","ImageWMS","url","crossOrigin","attributions","params","serverType","Map","controls","defaultControls","extend","ScaleLine","target","view","View","center","fromLonLat","zoom"],"sourceRoot":""}