{"version":3,"file":"center.js","mappings":"2MAQMA,EAAS,IAAIC,EAAAA,EAAa,CAC9BC,IAAK,mCACLC,OAAQ,IAAIC,EAAAA,IAERC,EAAQ,IAAIC,EAAAA,GAAM,CACtBC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,6BAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,IAETC,MAAO,IAAIC,EAAAA,EAAY,CACrBC,OAAQ,EACRR,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,6BAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,QAIPI,EAAc,IAAIC,EAAAA,EAAY,CAClCjB,OAAQA,EACRK,MAAOA,IAEHa,EAAO,IAAIC,EAAAA,GAAK,CACpBC,OAAQ,CAAC,EAAG,GACZC,KAAM,IAEFC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZzB,OAAQ,IAAI0B,EAAAA,IAEdV,GAEFW,OAAQ,MACRT,KAAMA,IAGkBU,SAASC,eAAe,qBAChCC,iBAChB,SACA,WACE,IACMC,EADU/B,EAAOgC,cAAc,GACbC,cACxBf,EAAKgB,IAAIH,EAAS,CAACI,QAAS,CAAC,IAAK,GAAI,GAAI,UAE5C,GAGqBP,SAASC,eAAe,kBAChCC,iBACb,SACA,WACE,IACMM,EADUpC,EAAOgC,cAAc,GACfC,cACtBf,EAAKgB,IAAIE,EAAO,CAACD,QAAS,CAAC,IAAK,GAAI,GAAI,KAAME,cAAe,QAE/D,GAGqBT,SAASC,eAAe,kBAChCC,iBACb,SACA,WACE,IACMM,EADUpC,EAAOgC,cAAc,GACfC,cAChBK,EAAOhB,EAAIiB,UACjBrB,EAAKsB,SAASJ,EAAMK,iBAAkBH,EAAM,CAAC,IAAK,SAEpD,K","sources":["webpack:///./center.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\n/** @type {VectorSource<import(\"../src/ol/geom/SimpleGeometry.js\").default>} */\nconst source = new VectorSource({\n  url: 'data/geojson/switzerland.geojson',\n  format: new GeoJSON(),\n});\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.6)',\n    }),\n    stroke: new Stroke({\n      color: '#319FD3',\n      width: 1,\n    }),\n  }),\n});\nconst vectorLayer = new VectorLayer({\n  source: source,\n  style: style,\n});\nconst view = new View({\n  center: [0, 0],\n  zoom: 1,\n});\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    vectorLayer,\n  ],\n  target: 'map',\n  view: view,\n});\n\nconst zoomtoswitzerland = document.getElementById('zoomtoswitzerland');\nzoomtoswitzerland.addEventListener(\n  'click',\n  function () {\n    const feature = source.getFeatures()[0];\n    const polygon = feature.getGeometry();\n    view.fit(polygon, {padding: [170, 50, 30, 150]});\n  },\n  false\n);\n\nconst zoomtolausanne = document.getElementById('zoomtolausanne');\nzoomtolausanne.addEventListener(\n  'click',\n  function () {\n    const feature = source.getFeatures()[1];\n    const point = feature.getGeometry();\n    view.fit(point, {padding: [170, 50, 30, 150], minResolution: 50});\n  },\n  false\n);\n\nconst centerlausanne = document.getElementById('centerlausanne');\ncenterlausanne.addEventListener(\n  'click',\n  function () {\n    const feature = source.getFeatures()[1];\n    const point = feature.getGeometry();\n    const size = map.getSize();\n    view.centerOn(point.getCoordinates(), size, [570, 500]);\n  },\n  false\n);\n"],"names":["source","VectorSource","url","format","GeoJSON","style","Style","fill","Fill","color","stroke","Stroke","width","image","CircleStyle","radius","vectorLayer","VectorLayer","view","View","center","zoom","map","Map","layers","TileLayer","OSM","target","document","getElementById","addEventListener","polygon","getFeatures","getGeometry","fit","padding","point","minResolution","size","getSize","centerOn","getCoordinates"],"sourceRoot":""}