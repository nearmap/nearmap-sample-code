{"version":3,"file":"layer-clipping-vector.js","mappings":"qNAUMA,EAAa,IAAIC,EAAAA,EAAU,CAC/BC,UAAW,SACXC,OAAQ,IAAIC,EAAAA,EAAO,CACjBC,MAAO,YAILC,EAAO,IAAIL,EAAAA,EAAU,CACzBE,OAAQ,IAAII,EAAAA,IAGRC,EAAY,IAAIC,EAAAA,EAAY,CAChCC,MAAO,KACPP,OAAQ,IAAIQ,EAAAA,EAAa,CACvBC,IAAK,qCACLC,OAAQ,IAAIC,EAAAA,MAKhBN,EAAUO,YAAYC,GAAG,cAAc,WACrCV,EAAKW,UAAUT,EAAUO,YAAYG,gBAGvC,IAAMR,EAAQ,IAAIS,EAAAA,GAAM,CACtBC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,YAIXhB,EAAKU,GAAG,cAAc,SAAUO,GAC9B,IAAMC,GAAgBC,EAAAA,EAAAA,IAAiBF,GACvCA,EAAEG,QAAQC,yBAA2B,iBACrCnB,EAAUO,YAAYa,gBAAe,SAAUC,GAC7CL,EAAcM,YAAYD,EAASnB,MAErCa,EAAEG,QAAQC,yBAA2B,iBAG3B,IAAII,EAAAA,EAAI,CAClBC,OAAQ,CAAChC,EAAYM,EAAME,GAC3ByB,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,QAAQC,EAAAA,EAAAA,IAAW,CAAC,KAAM,QAC1BC,KAAM,Q","sources":["webpack:///./layer-clipping-vector.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Style} from '../src/ol/style.js';\nimport {OSM, Stamen, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport {getVectorContext} from '../src/ol/render.js';\n\n//A distinct className is required to use another canvas for the background\nconst background = new TileLayer({\n  className: 'stamen',\n  source: new Stamen({\n    layer: 'toner',\n  }),\n});\n\nconst base = new TileLayer({\n  source: new OSM(),\n});\n\nconst clipLayer = new VectorLayer({\n  style: null,\n  source: new VectorSource({\n    url: './data/geojson/switzerland.geojson',\n    format: new GeoJSON(),\n  }),\n});\n\n//Giving the clipped layer an extent is necessary to avoid rendering when the feature is outside the viewport\nclipLayer.getSource().on('addfeature', function () {\n  base.setExtent(clipLayer.getSource().getExtent());\n});\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'black',\n  }),\n});\n\nbase.on('postrender', function (e) {\n  const vectorContext = getVectorContext(e);\n  e.context.globalCompositeOperation = 'destination-in';\n  clipLayer.getSource().forEachFeature(function (feature) {\n    vectorContext.drawFeature(feature, style);\n  });\n  e.context.globalCompositeOperation = 'source-over';\n});\n\nconst map = new Map({\n  layers: [background, base, clipLayer],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([8.23, 46.86]),\n    zoom: 7,\n  }),\n});\n"],"names":["background","TileLayer","className","source","Stamen","layer","base","OSM","clipLayer","VectorLayer","style","VectorSource","url","format","GeoJSON","getSource","on","setExtent","getExtent","Style","fill","Fill","color","e","vectorContext","getVectorContext","context","globalCompositeOperation","forEachFeature","feature","drawFeature","Map","layers","target","view","View","center","fromLonLat","zoom"],"sourceRoot":""}