{"version":3,"file":"kml-timezones.js","mappings":"iMA4CMA,EAAS,IAAIC,EAAAA,EAAY,CAC7BC,OAAQ,IAAIC,EAAAA,EAAa,CACvBC,IAAK,yBACLC,OAAQ,IAAIC,EAAAA,GAAI,CACdC,eAAe,MAGnBC,MApCoB,SAAUC,GAC9B,IAAIC,EAAS,EAEPC,EADOF,EAAQG,IAAI,QACND,MAAM,yBACrBA,IAGFD,EAAS,GAFKG,SAASF,EAAM,GAAI,IACjBE,SAASF,EAAM,GAAI,KAGrC,IAAMG,EAAO,IAAIC,KACXC,EAAQ,IAAID,KAChBD,EAAKG,UAAkD,KAArCH,EAAKI,oBAAsBR,IAG3CS,EAAQC,KAAKC,IAAI,GAAKL,EAAMM,WAAaN,EAAMO,aAAe,IAC9DJ,EAAQ,KACVA,EAAQ,GAAKA,GAEf,IAAMK,EAAU,KAAQ,EAAIL,EAAQ,IACpC,OAAO,IAAIM,EAAAA,GAAM,CACfC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,CAAC,IAAM,IAAM,GAAMJ,KAE5BK,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,iBAePG,EAAS,IAAIC,EAAAA,EAAU,CAC3B9B,OAAQ,IAAI+B,EAAAA,EAAO,CACjBC,MAAO,YAILC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACN,EAAQ/B,GACjBsC,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAOC,EAAE,SACfD,EAAKE,QAAQ,CACXC,WAAW,EACXC,QAAS,WAGX,IAAMC,EAAqB,SAAUC,GACnCN,EAAKO,IAAI,CACPC,KAAMF,EAAM,GAAK,KACjBG,IAAKH,EAAM,GAAK,GAAK,OAEvB,IAAMxC,EAAU0B,EAAIkB,sBAAsBJ,GAAO,SAAUxC,GACzD,OAAOA,KAELA,EACFkC,EAAKW,KAAK,sBAAuB7C,EAAQG,IAAI,SAASiC,QAAQ,QAE9DF,EAAKE,QAAQ,SAIjBV,EAAIoB,GAAG,eAAe,SAAUC,GAC1BA,EAAIC,SACNd,EAAKE,QAAQ,QAGfG,EAAmBb,EAAIuB,cAAcF,EAAIG,mBAG3CxB,EAAIoB,GAAG,SAAS,SAAUC,GACxBR,EAAmBQ,EAAIP,Y","sources":["webpack:///./kml-timezones.js"],"sourcesContent":["import KML from '../src/ol/format/KML.js';\nimport Map from '../src/ol/Map.js';\nimport Stamen from '../src/ol/source/Stamen.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\n/*\n * Compute the style of the feature.  Here we want the opacity of polygons to\n * be based on the offset from local noon.  For example, a timezone where it is\n * currently noon would have an opacity of 0.75.  And a timezone where it is\n * currently midnight would have an opacity of 0.  This doesn't account for\n * daylight savings, so don't use it to plan your vacation.\n */\nconst styleFunction = function (feature) {\n  let offset = 0;\n  const name = feature.get('name'); // e.g. GMT -08:30\n  const match = name.match(/([\\-+]\\d{2}):(\\d{2})$/);\n  if (match) {\n    const hours = parseInt(match[1], 10);\n    const minutes = parseInt(match[2], 10);\n    offset = 60 * hours + minutes;\n  }\n  const date = new Date();\n  const local = new Date(\n    date.getTime() + (date.getTimezoneOffset() + offset) * 60000\n  );\n  // offset from local noon (in hours)\n  let delta = Math.abs(12 - local.getHours() + local.getMinutes() / 60);\n  if (delta > 12) {\n    delta = 24 - delta;\n  }\n  const opacity = 0.75 * (1 - delta / 12);\n  return new Style({\n    fill: new Fill({\n      color: [0xff, 0xff, 0x33, opacity],\n    }),\n    stroke: new Stroke({\n      color: '#ffffff',\n    }),\n  });\n};\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/kml/timezones.kml',\n    format: new KML({\n      extractStyles: false,\n    }),\n  }),\n  style: styleFunction,\n});\n\nconst raster = new TileLayer({\n  source: new Stamen({\n    layer: 'toner',\n  }),\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst info = $('#info');\ninfo.tooltip({\n  animation: false,\n  trigger: 'manual',\n});\n\nconst displayFeatureInfo = function (pixel) {\n  info.css({\n    left: pixel[0] + 'px',\n    top: pixel[1] - 15 + 'px',\n  });\n  const feature = map.forEachFeatureAtPixel(pixel, function (feature) {\n    return feature;\n  });\n  if (feature) {\n    info.attr('data-original-title', feature.get('name')).tooltip('show');\n  } else {\n    info.tooltip('hide');\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    info.tooltip('hide');\n    return;\n  }\n  displayFeatureInfo(map.getEventPixel(evt.originalEvent));\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"names":["vector","VectorLayer","source","VectorSource","url","format","KML","extractStyles","style","feature","offset","match","get","parseInt","date","Date","local","getTime","getTimezoneOffset","delta","Math","abs","getHours","getMinutes","opacity","Style","fill","Fill","color","stroke","Stroke","raster","TileLayer","Stamen","layer","map","Map","layers","target","view","View","center","zoom","info","$","tooltip","animation","trigger","displayFeatureInfo","pixel","css","left","top","forEachFeatureAtPixel","attr","on","evt","dragging","getEventPixel","originalEvent"],"sourceRoot":""}