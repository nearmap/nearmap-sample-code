{"version":3,"file":"wms-capabilities.js","mappings":"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","sources":["webpack:///../src/ol/format/WMSCapabilities.js","webpack:///./wms-capabilities.js"],"sourcesContent":["/**\n * @module ol/format/WMSCapabilities\n */\nimport XML from './XML.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  readBooleanString,\n  readDecimal,\n  readDecimalString,\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  readString,\n} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wms'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Service': makeObjectPropertySetter(readService),\n  'Capability': makeObjectPropertySetter(readCapability),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Request': makeObjectPropertySetter(readRequest),\n  'Exception': makeObjectPropertySetter(readException),\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\n});\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      []\n    );\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'LayerLimit': makeObjectPropertySetter(readPositiveInteger),\n  'MaxWidth': makeObjectPropertySetter(readPositiveInteger),\n  'MaxHeight': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n  'ContactPosition': makeObjectPropertySetter(readString),\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPerson': makeObjectPropertySetter(readString),\n  'ContactOrganization': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AddressType': makeObjectPropertySetter(readString),\n  'Address': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'StateOrProvince': makeObjectPropertySetter(readString),\n  'PostCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeArrayPusher(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'CRS': makeObjectPropertyPusher(readString),\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\n    readEXGeographicBoundingBox\n  ),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n  'Dimension': makeObjectPropertyPusher(readDimension),\n  'Attribution': makeObjectPropertySetter(readAttribution),\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n  'Identifier': makeObjectPropertyPusher(readString),\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'Style': makeObjectPropertyPusher(readStyle),\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\n  'GetMap': makeObjectPropertySetter(readOperationType),\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertyPusher(readString),\n  'DCPType': makeObjectPropertyPusher(readDCPType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy')),\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy')),\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions,\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['northBoundLatitude']);\n  if (\n    westBoundLongitude === undefined ||\n    southBoundLatitude === undefined ||\n    eastBoundLongitude === undefined ||\n    northBoundLatitude === undefined\n  ) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude,\n    southBoundLatitude,\n    eastBoundLongitude,\n    northBoundLatitude,\n  ];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (layerObject['Layer'] === undefined) {\n    return Object.assign(layerObject, readLayer(node, objectStack));\n  }\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (\n    objectStack[objectStack.length - 1]\n  );\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function (key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = [\n    'EX_GeographicBoundingBox',\n    'BoundingBox',\n    'Dimension',\n    'Attribution',\n    'MinScaleDenominator',\n    'MaxScaleDenominator',\n  ];\n  replaceKeys.forEach(function (key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node),\n  };\n  return dimensionObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height')),\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\nexport default WMSCapabilities;\n","import WMSCapabilities from '../src/ol/format/WMSCapabilities.js';\n\nconst parser = new WMSCapabilities();\n\nfetch('data/ogcsample.xml')\n  .then(function (response) {\n    return response.text();\n  })\n  .then(function (text) {\n    const result = parser.read(text);\n    document.getElementById('log').innerText = JSON.stringify(result, null, 2);\n  });\n"],"names":["NAMESPACE_URIS","PARSERS","makeStructureNS","makeObjectPropertySetter","node","objectStack","pushParseAndPop","SERVICE_PARSERS","CAPABILITY_PARSERS","REQUEST_PARSERS","EXCEPTION_PARSERS","layerObject","LAYER_PARSERS","undefined","Object","assign","readLayer","WMSCapabilities","version","this","getAttribute","trim","wmsCapabilityObject","XML","readString","readKeywordList","readHref","CONTACT_INFORMATION_PARSERS","readPositiveInteger","CONTACT_PERSON_PARSERS","CONTACT_ADDRESS_PARSERS","makeArrayPusher","makeObjectPropertyPusher","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","extent","readDecimalString","resolutions","readBooleanString","ATTRIBUTION_PARSERS","authorityObject","readFormatOnlineresource","metadataObject","STYLE_PARSERS","readDecimal","readSizedFormatOnlineresource","readOperationType","OPERATIONTYPE_PARSERS","DCPTYPE_PARSERS","HTTP_PARSERS","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","parentLayerObject","length","queryable","cascaded","readNonNegativeIntegerString","opaque","noSubsets","fixedWidth","fixedHeight","forEach","key","childValue","concat","parentValue","formatOnlineresource","size","parser","fetch","then","response","text","result","read","document","getElementById","innerText","JSON","stringify"],"sourceRoot":""}