{"version":3,"file":"snap.js","mappings":"yOAOMA,EAAS,IAAIC,EAAAA,EAAU,CAC3BC,OAAQ,IAAIC,EAAAA,IAGRC,EAAS,IAAIC,EAAAA,EAAY,CAC7BH,OAAQ,IAAII,EAAAA,EACZC,MAAO,IAAIC,EAAAA,GAAM,CACfC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,6BAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,IAETC,MAAO,IAAIC,EAAAA,EAAY,CACrBC,OAAQ,EACRR,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,kBAMTO,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACpB,EAAQI,GACjBiB,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,EAAE,KAAU,MACpBC,KAAM,MAIJC,EAAgB,CACpBC,KAAM,WACJC,KAAKC,OAAS,IAAIC,EAAAA,EAClBZ,EAAIa,eAAeH,KAAKC,QAExBD,KAAKI,OAAS,IAAIC,EAAAA,EAAO,CACvBC,SAAUN,KAAKC,OAAOM,gBAExBjB,EAAIa,eAAeH,KAAKI,QAExBJ,KAAKQ,aAEPA,UAAW,WACT,IAAMC,EAAmBT,KAAKC,OAAOM,cAErCP,KAAKC,OAAOS,GAAG,iBAAiB,WAC9BD,EAAiBE,SAAQ,SAAUC,GACjCH,EAAiBI,OAAOD,UAI9BE,UAAW,SAAUC,GACnBf,KAAKC,OAAOa,UAAUC,GACtBf,KAAKI,OAAOU,UAAUC,KAG1BjB,EAAcC,OAEd,IAAMiB,EAAcC,SAASC,eAAe,gBAEtCC,EAAc,CAClBpB,KAAM,WACJT,EAAIa,eAAeH,KAAKoB,OACxBpB,KAAKoB,MAAMN,WAAU,GACrBxB,EAAIa,eAAeH,KAAKqB,YACxBrB,KAAKqB,WAAWP,WAAU,GAC1BxB,EAAIa,eAAeH,KAAKsB,SACxBtB,KAAKsB,QAAQR,WAAU,GACvBxB,EAAIa,eAAeH,KAAKuB,QACxBvB,KAAKuB,OAAOT,WAAU,IAExBM,MAAO,IAAII,EAAAA,GAAK,CACdlD,OAAQE,EAAOiD,YACfC,KAAM,UAERL,WAAY,IAAIG,EAAAA,GAAK,CACnBlD,OAAQE,EAAOiD,YACfC,KAAM,eAERJ,QAAS,IAAIE,EAAAA,GAAK,CAChBlD,OAAQE,EAAOiD,YACfC,KAAM,YAERH,OAAQ,IAAIC,EAAAA,GAAK,CACflD,OAAQE,EAAOiD,YACfC,KAAM,WAERC,UAAW,WACT,QAAO3B,KAAK4B,YAAa5B,KAAKA,KAAK4B,YAAYD,aAEjDb,UAAW,SAAUC,GACnB,IAAMW,EAAOV,EAAYa,SAAS,aAAaC,MAC3Cf,GACFf,KAAK4B,YAAc5B,KAAKA,KAAK4B,YAAYd,WAAU,GACnDd,KAAK0B,GAAMZ,WAAU,GACrBd,KAAK4B,WAAaF,IAElB1B,KAAK4B,YAAc5B,KAAKA,KAAK4B,YAAYd,WAAU,GACnDd,KAAK4B,WAAa,QAIxBT,EAAYpB,OAMZiB,EAAYe,SAAW,SAAUC,GAC/B,IAAMN,EAAOM,EAAEvC,OAAOwC,aAAa,QAC7BH,EAAQE,EAAEvC,OAAOqC,MACX,aAARJ,EACFP,EAAYQ,aAAeR,EAAYL,WAAU,GAChC,eAARY,IACI,UAATI,GACFX,EAAYL,WAAU,GACtBhB,EAAcgB,WAAU,IACN,QAATgB,IACTX,EAAYL,WAAU,GACtBhB,EAAcgB,WAAU,MAK9BK,EAAYL,WAAU,GACtBhB,EAAcgB,WAAU,GAKxB,IAAMoB,EAAO,IAAIC,EAAAA,EAAK,CACpB7D,OAAQE,EAAOiD,cAEjBnC,EAAIa,eAAe+B,K","sources":["webpack:///./snap.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\nimport {Draw, Modify, Select, Snap} from '../src/ol/interaction.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource(),\n  style: new Style({\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.2)',\n    }),\n    stroke: new Stroke({\n      color: '#ffcc33',\n      width: 2,\n    }),\n    image: new CircleStyle({\n      radius: 7,\n      fill: new Fill({\n        color: '#ffcc33',\n      }),\n    }),\n  }),\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4,\n  }),\n});\n\nconst ExampleModify = {\n  init: function () {\n    this.select = new Select();\n    map.addInteraction(this.select);\n\n    this.modify = new Modify({\n      features: this.select.getFeatures(),\n    });\n    map.addInteraction(this.modify);\n\n    this.setEvents();\n  },\n  setEvents: function () {\n    const selectedFeatures = this.select.getFeatures();\n\n    this.select.on('change:active', function () {\n      selectedFeatures.forEach(function (each) {\n        selectedFeatures.remove(each);\n      });\n    });\n  },\n  setActive: function (active) {\n    this.select.setActive(active);\n    this.modify.setActive(active);\n  },\n};\nExampleModify.init();\n\nconst optionsForm = document.getElementById('options-form');\n\nconst ExampleDraw = {\n  init: function () {\n    map.addInteraction(this.Point);\n    this.Point.setActive(false);\n    map.addInteraction(this.LineString);\n    this.LineString.setActive(false);\n    map.addInteraction(this.Polygon);\n    this.Polygon.setActive(false);\n    map.addInteraction(this.Circle);\n    this.Circle.setActive(false);\n  },\n  Point: new Draw({\n    source: vector.getSource(),\n    type: 'Point',\n  }),\n  LineString: new Draw({\n    source: vector.getSource(),\n    type: 'LineString',\n  }),\n  Polygon: new Draw({\n    source: vector.getSource(),\n    type: 'Polygon',\n  }),\n  Circle: new Draw({\n    source: vector.getSource(),\n    type: 'Circle',\n  }),\n  getActive: function () {\n    return this.activeType ? this[this.activeType].getActive() : false;\n  },\n  setActive: function (active) {\n    const type = optionsForm.elements['draw-type'].value;\n    if (active) {\n      this.activeType && this[this.activeType].setActive(false);\n      this[type].setActive(true);\n      this.activeType = type;\n    } else {\n      this.activeType && this[this.activeType].setActive(false);\n      this.activeType = null;\n    }\n  },\n};\nExampleDraw.init();\n\n/**\n * Let user change the geometry type.\n * @param {Event} e Change event.\n */\noptionsForm.onchange = function (e) {\n  const type = e.target.getAttribute('name');\n  const value = e.target.value;\n  if (type == 'draw-type') {\n    ExampleDraw.getActive() && ExampleDraw.setActive(true);\n  } else if (type == 'interaction') {\n    if (value == 'modify') {\n      ExampleDraw.setActive(false);\n      ExampleModify.setActive(true);\n    } else if (value == 'draw') {\n      ExampleDraw.setActive(true);\n      ExampleModify.setActive(false);\n    }\n  }\n};\n\nExampleDraw.setActive(true);\nExampleModify.setActive(false);\n\n// The snap interaction must be added after the Modify and Draw interactions\n// in order for its map browser event handlers to be fired first. Its handlers\n// are responsible of doing the snapping.\nconst snap = new Snap({\n  source: vector.getSource(),\n});\nmap.addInteraction(snap);\n"],"names":["raster","TileLayer","source","OSM","vector","VectorLayer","VectorSource","style","Style","fill","Fill","color","stroke","Stroke","width","image","CircleStyle","radius","map","Map","layers","target","view","View","center","zoom","ExampleModify","init","this","select","Select","addInteraction","modify","Modify","features","getFeatures","setEvents","selectedFeatures","on","forEach","each","remove","setActive","active","optionsForm","document","getElementById","ExampleDraw","Point","LineString","Polygon","Circle","Draw","getSource","type","getActive","activeType","elements","value","onchange","e","getAttribute","snap","Snap"],"sourceRoot":""}