{"version":3,"file":"icon.js","mappings":"2MAUMA,EAAc,IAAIC,EAAAA,EAAQ,CAC9BC,SAAU,IAAIC,EAAAA,EAAM,CAAC,EAAG,IACxBC,KAAM,cACNC,WAAY,IACZC,SAAU,MAGNC,EAAY,IAAIC,EAAAA,GAAM,CAC1BC,MAAO,IAAIC,EAAAA,EAAK,CACdC,OAAQ,CAAC,GAAK,IACdC,aAAc,WACdC,aAAc,SACdC,IAAK,oBAITd,EAAYe,SAASR,GAErB,IAAMS,EAAe,IAAIC,EAAAA,EAAa,CACpCC,SAAU,CAAClB,KAGPmB,EAAc,IAAIC,EAAAA,EAAY,CAClCC,OAAQL,IAGJM,EAAc,IAAIC,EAAAA,EAAU,CAChCF,OAAQ,IAAIG,EAAAA,EAAS,CACnBC,IAAK,6DACLC,YAAa,OAIXC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACP,EAAaH,GACtBW,OAAQC,SAASC,eAAe,OAChCC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAUN,SAASC,eAAe,SAElCM,EAAQ,IAAIC,EAAAA,EAAQ,CACxBF,QAASA,EACTG,YAAa,gBACbC,WAAW,IAEbd,EAAIe,WAAWJ,GAGfX,EAAIgB,GAAG,SAAS,SAAUC,GACxB,IAAMC,EAAUlB,EAAImB,sBAAsBF,EAAIG,OAAO,SAAUF,GAC7D,OAAOA,KAELA,GACFP,EAAMU,YAAYJ,EAAIK,YACtBC,EAAEb,GAASc,QAAQ,CACjBC,UAAW,MACXC,MAAM,EACNC,QAAST,EAAQU,IAAI,UAEvBL,EAAEb,GAASc,QAAQ,SAEnBD,EAAEb,GAASc,QAAQ,cAKvBxB,EAAIgB,GAAG,eAAe,SAAUa,GAC9B,IAAMT,EAAQpB,EAAI8B,cAAcD,EAAEE,eAC5BC,EAAMhC,EAAIiC,kBAAkBb,GAClCpB,EAAIkC,YAAYC,MAAMC,OAASJ,EAAM,UAAY,MAGnDhC,EAAIgB,GAAG,aAAa,WAClBO,EAAEb,GAASc,QAAQ,gB","sources":["webpack:///./icon.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport Overlay from '../src/ol/Overlay.js';\nimport Point from '../src/ol/geom/Point.js';\nimport TileJSON from '../src/ol/source/TileJSON.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport {Icon, Style} from '../src/ol/style.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nconst iconFeature = new Feature({\n  geometry: new Point([0, 0]),\n  name: 'Null Island',\n  population: 4000,\n  rainfall: 500,\n});\n\nconst iconStyle = new Style({\n  image: new Icon({\n    anchor: [0.5, 46],\n    anchorXUnits: 'fraction',\n    anchorYUnits: 'pixels',\n    src: 'data/icon.png',\n  }),\n});\n\niconFeature.setStyle(iconStyle);\n\nconst vectorSource = new VectorSource({\n  features: [iconFeature],\n});\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n});\n\nconst rasterLayer = new TileLayer({\n  source: new TileJSON({\n    url: 'https://a.tiles.mapbox.com/v3/aj.1x1-degrees.json?secure=1',\n    crossOrigin: '',\n  }),\n});\n\nconst map = new Map({\n  layers: [rasterLayer, vectorLayer],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [0, 0],\n    zoom: 3,\n  }),\n});\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n});\nmap.addOverlay(popup);\n\n// display popup on click\nmap.on('click', function (evt) {\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n  if (feature) {\n    popup.setPosition(evt.coordinate);\n    $(element).popover({\n      placement: 'top',\n      html: true,\n      content: feature.get('name'),\n    });\n    $(element).popover('show');\n  } else {\n    $(element).popover('dispose');\n  }\n});\n\n// change mouse cursor when over marker\nmap.on('pointermove', function (e) {\n  const pixel = map.getEventPixel(e.originalEvent);\n  const hit = map.hasFeatureAtPixel(pixel);\n  map.getTarget().style.cursor = hit ? 'pointer' : '';\n});\n// Close the popup when the map is moved\nmap.on('movestart', function () {\n  $(element).popover('dispose');\n});\n"],"names":["iconFeature","Feature","geometry","Point","name","population","rainfall","iconStyle","Style","image","Icon","anchor","anchorXUnits","anchorYUnits","src","setStyle","vectorSource","VectorSource","features","vectorLayer","VectorLayer","source","rasterLayer","TileLayer","TileJSON","url","crossOrigin","map","Map","layers","target","document","getElementById","view","View","center","zoom","element","popup","Overlay","positioning","stopEvent","addOverlay","on","evt","feature","forEachFeatureAtPixel","pixel","setPosition","coordinate","$","popover","placement","html","content","get","e","getEventPixel","originalEvent","hit","hasFeatureAtPixel","getTarget","style","cursor"],"sourceRoot":""}