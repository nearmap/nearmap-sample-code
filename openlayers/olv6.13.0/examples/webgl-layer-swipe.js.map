{"version":3,"file":"webgl-layer-swipe.js","mappings":"0JAOMA,EAAM,IAAIC,EAAAA,EAAU,CACxBC,OAAQ,IAAIC,EAAAA,EAAI,CAACC,OAAO,MAKpBC,EAAU,IAAIJ,EAAAA,EAAU,CAC5BC,OAAQ,IAAII,EAAAA,EAAI,CACdC,IAAK,iGACLC,aACE,4LAEFC,QAAS,OAIPC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACZ,EAAKK,GACdQ,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQC,SAASC,eAAe,SAEtCf,EAAQgB,GAAG,aAAa,SAAUC,GAChC,IAAMC,EAAKD,EAAME,QACjBD,EAAGE,OAAOF,EAAGG,cAEb,IAAMC,EAAUjB,EAAIkB,UAGdC,GAAaC,EAAAA,EAAAA,IAAeR,EAAO,CAAC,EAAGK,EAAQ,KAC/CI,GAAWD,EAAAA,EAAAA,IAAeR,EAAO,CAACK,EAAQ,GAAI,IAE9CK,EAAQC,KAAKC,OAAOH,EAAS,GAAKF,EAAW,KAAOX,EAAMiB,MAAQ,MAClEC,EAASL,EAAS,GAAKF,EAAW,GAExCN,EAAGc,QAAQR,EAAW,GAAIA,EAAW,GAAIG,EAAOI,MAGlD/B,EAAQgB,GAAG,cAAc,SAAUC,GACjC,IAAMC,EAAKD,EAAME,QACjBD,EAAGe,QAAQf,EAAGG,iBAGhB,IAAMa,EAAW,WACf7B,EAAI8B,UAENtB,EAAMuB,iBAAiB,QAASF,GAChCrB,EAAMuB,iBAAiB,SAAUF,K","sources":["webpack:///./webgl-layer-swipe.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport View from '../src/ol/View.js';\nimport XYZ from '../src/ol/source/XYZ.js';\nimport {getRenderPixel} from '../src/ol/render.js';\n\nconst osm = new TileLayer({\n  source: new OSM({wrapX: true}),\n});\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\nconst imagery = new TileLayer({\n  source: new XYZ({\n    url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    attributions:\n      '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>',\n    maxZoom: 20,\n  }),\n});\n\nconst map = new Map({\n  layers: [osm, imagery],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst swipe = document.getElementById('swipe');\n\nimagery.on('prerender', function (event) {\n  const gl = event.context;\n  gl.enable(gl.SCISSOR_TEST);\n\n  const mapSize = map.getSize(); // [width, height] in CSS pixels\n\n  // get render coordinates and dimensions given CSS coordinates\n  const bottomLeft = getRenderPixel(event, [0, mapSize[1]]);\n  const topRight = getRenderPixel(event, [mapSize[0], 0]);\n\n  const width = Math.round((topRight[0] - bottomLeft[0]) * (swipe.value / 100));\n  const height = topRight[1] - bottomLeft[1];\n\n  gl.scissor(bottomLeft[0], bottomLeft[1], width, height);\n});\n\nimagery.on('postrender', function (event) {\n  const gl = event.context;\n  gl.disable(gl.SCISSOR_TEST);\n});\n\nconst listener = function () {\n  map.render();\n};\nswipe.addEventListener('input', listener);\nswipe.addEventListener('change', listener);\n"],"names":["osm","TileLayer","source","OSM","wrapX","imagery","XYZ","url","attributions","maxZoom","map","Map","layers","target","view","View","center","zoom","swipe","document","getElementById","on","event","gl","context","enable","SCISSOR_TEST","mapSize","getSize","bottomLeft","getRenderPixel","topRight","width","Math","round","value","height","scissor","disable","listener","render","addEventListener"],"sourceRoot":""}