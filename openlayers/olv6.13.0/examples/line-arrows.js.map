{"version":3,"file":"line-arrows.js","mappings":"qNASMA,EAAS,IAAIC,EAAAA,EAAU,CAC3BC,OAAQ,IAAIC,EAAAA,IAGRD,EAAS,IAAIE,EAAAA,EAkCbC,EAAS,IAAIC,EAAAA,EAAY,CAC7BJ,OAAQA,EACRK,MAlCoB,SAAUC,GAC9B,IAAMC,EAAWD,EAAQE,cACnBC,EAAS,CAEb,IAAIC,EAAAA,GAAM,CACRC,OAAQ,IAAIC,EAAAA,EAAO,CACjBC,MAAO,UACPC,MAAO,OAuBb,OAlBAP,EAASQ,gBAAe,SAAUC,EAAOC,GACvC,IAAMC,EAAKD,EAAI,GAAKD,EAAM,GACpBG,EAAKF,EAAI,GAAKD,EAAM,GACpBI,EAAWC,KAAKC,MAAMH,EAAID,GAEhCT,EAAOc,KACL,IAAIb,EAAAA,GAAM,CACRH,SAAU,IAAIiB,EAAAA,EAAMP,GACpBQ,MAAO,IAAIC,EAAAA,EAAK,CACdC,IAAK,iBACLC,OAAQ,CAAC,IAAM,IACfC,gBAAgB,EAChBT,UAAWA,UAMZX,KASHqB,GAASC,EAAAA,EAAAA,IAAI,aAAaC,YAAYC,QAC5CH,EAAO,IAAMA,EAAO,GACpBA,EAAO,IAAMA,EAAO,GAER,IAAII,EAAAA,EAAI,CAClBC,OAAQ,CAACrC,EAAQK,GACjBiC,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,EAAE,KAAU,MACpBC,KAAM,EACNV,OAAAA,MAIAW,eACF,IAAIC,EAAAA,GAAK,CACP1C,OAAQA,EACR2C,KAAM,kB","sources":["webpack:///./line-arrows.js"],"sourcesContent":["import Draw from '../src/ol/interaction/Draw.js';\nimport Map from '../src/ol/Map.js';\nimport Point from '../src/ol/geom/Point.js';\nimport View from '../src/ol/View.js';\nimport {Icon, Stroke, Style} from '../src/ol/style.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {get} from '../src/ol/proj.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\nconst source = new VectorSource();\n\nconst styleFunction = function (feature) {\n  const geometry = feature.getGeometry();\n  const styles = [\n    // linestring\n    new Style({\n      stroke: new Stroke({\n        color: '#ffcc33',\n        width: 2,\n      }),\n    }),\n  ];\n\n  geometry.forEachSegment(function (start, end) {\n    const dx = end[0] - start[0];\n    const dy = end[1] - start[1];\n    const rotation = Math.atan2(dy, dx);\n    // arrows\n    styles.push(\n      new Style({\n        geometry: new Point(end),\n        image: new Icon({\n          src: 'data/arrow.png',\n          anchor: [0.75, 0.5],\n          rotateWithView: true,\n          rotation: -rotation,\n        }),\n      })\n    );\n  });\n\n  return styles;\n};\nconst vector = new VectorLayer({\n  source: source,\n  style: styleFunction,\n});\n\n// Limit multi-world panning to one world east and west of the real world.\n// Geometry coordinates have to be within that range.\nconst extent = get('EPSG:3857').getExtent().slice();\nextent[0] += extent[0];\nextent[2] += extent[2];\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4,\n    extent,\n  }),\n});\n\nmap.addInteraction(\n  new Draw({\n    source: source,\n    type: 'LineString',\n  })\n);\n"],"names":["raster","TileLayer","source","OSM","VectorSource","vector","VectorLayer","style","feature","geometry","getGeometry","styles","Style","stroke","Stroke","color","width","forEachSegment","start","end","dx","dy","rotation","Math","atan2","push","Point","image","Icon","src","anchor","rotateWithView","extent","get","getExtent","slice","Map","layers","target","view","View","center","zoom","addInteraction","Draw","type"],"sourceRoot":""}