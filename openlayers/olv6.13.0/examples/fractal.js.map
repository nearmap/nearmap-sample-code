{"version":3,"file":"fractal.js","mappings":"0JAOMA,EAAS,IACTC,EAAQC,KAAKC,IAAID,KAAKE,GAAK,GAE3BC,EAAOL,EADCE,KAAKI,IAAIJ,KAAKE,GAAK,GAE3BG,EAAMP,EAASC,EAEfO,EAAW,IAAIC,EAAAA,EAAW,CAC9B,CAAC,EAAGT,GACJ,CAACO,GAAMF,GACP,EAAEE,GAAMF,GACR,CAAC,EAAGL,KAGAU,EAAU,IAAIC,EAAAA,EAAQH,GAEtBI,EAAQ,IAAIC,EAAAA,EAAY,CAC5BC,OAAQ,IAAIC,EAAAA,EAAa,CACvBC,SAAU,CAACN,OAIH,IAAIO,EAAAA,EAAI,CAClBC,OAAQ,CAACN,GACTO,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAqBV,SAASC,EAAYC,GACnB,IAAMC,EAAUD,EAAUE,KAEpBC,EAAQH,EAAUI,MAClBC,EAAML,EAAUE,KAAKE,MACrBE,EAAKD,EAAI,GAAKF,EAAM,GACpBI,EAAKF,EAAI,GAAKF,EAAM,GAGpBK,EAAY,CAChBJ,MAAO,CAACD,EAAM,GAAKG,EAAK,EAAGH,EAAM,GAAKI,EAAK,IAIvCE,EAAIhC,KAAKiC,KAAKJ,EAAKA,EAAKC,EAAKA,IAAO,EAAI/B,GACxCmC,EAAIlC,KAAKmC,MAAML,EAAID,GAAM7B,KAAKE,GAAK,EACnCkC,EAAa,CACjBT,MAAO,CAACD,EAAM,GAAKM,EAAIhC,KAAKC,IAAIiC,GAAIR,EAAM,GAAKM,EAAIhC,KAAKI,IAAI8B,KAIxDG,EAAY,CAChBV,MAAO,CAACC,EAAI,GAAKC,EAAK,EAAGD,EAAI,GAAKE,EAAK,IAGzCP,EAAUE,KAAOM,EACjBA,EAAUN,KAAOW,EACjBA,EAAWX,KAAOY,EAClBA,EAAUZ,KAAOD,EAyBnB,IAMIc,EANEC,EAAaC,SAASC,eAAe,SAE3C,SAASC,KAxET,SAAqBC,GAGnB,IAFA,IAAMC,EAAWtC,EAASuC,QACpBC,EA8CR,SAAuBC,GAKrB,IAJA,IAAMD,EAAQ,CACZnB,MAAOoB,EAAY,IAEfC,EAASD,EAAYC,OAClBC,EAAQ,EAAGC,EAAOJ,EAAOG,EAAQD,EAAS,IAAKC,EACtDC,EAAKzB,KAAO,CACVE,MAAOoB,EAAYE,EAAQ,IAE7BC,EAAOA,EAAKzB,KAEd,OAAOqB,EAzDOK,CAAcP,EAASQ,kBAC5BC,EAAI,EAAGA,EAAIV,IAASU,EAE3B,IADA,IAAIH,EAAOJ,EACJI,EAAKzB,MAAM,CAChB,IAAMA,EAAOyB,EAAKzB,KAClBH,EAAY4B,GACZA,EAAOzB,EAGX,IAAMsB,EAmDR,SAAuBD,GAErB,IADA,IAAMC,EAAc,CAACD,EAAMnB,OAClBuB,EAAOJ,EAAOO,EAAI,EAAGH,EAAKzB,KAAMyB,EAAOA,EAAKzB,OAAQ4B,EAC3DN,EAAYM,GAAKH,EAAKzB,KAAKE,MAE7B,OAAOoB,EAxDaO,CAAcR,GAClCN,SAASC,eAAe,SAASc,UAAYR,EAAYC,OACzDJ,EAASY,eAAeT,GACxBvC,EAAQiD,YAAYb,GA2DpBc,CAAYC,OAAOpB,EAAWqB,QAShCrB,EAAWsB,SAAW,WACpBC,OAAOC,aAAazB,GACpBA,EAAcwB,OAAOE,WAAWtB,EAAQ,MAG1CA,M","sources":["webpack:///./fractal.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport Map from '../src/ol/Map.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\n\nconst radius = 10e6;\nconst cos30 = Math.cos(Math.PI / 6);\nconst sin30 = Math.sin(Math.PI / 6);\nconst rise = radius * sin30;\nconst run = radius * cos30;\n\nconst triangle = new LineString([\n  [0, radius],\n  [run, -rise],\n  [-run, -rise],\n  [0, radius],\n]);\n\nconst feature = new Feature(triangle);\n\nconst layer = new VectorLayer({\n  source: new VectorSource({\n    features: [feature],\n  }),\n});\n\nconst map = new Map({\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nfunction makeFractal(depth) {\n  const geometry = triangle.clone();\n  const graph = coordsToGraph(geometry.getCoordinates());\n  for (let i = 0; i < depth; ++i) {\n    let node = graph;\n    while (node.next) {\n      const next = node.next;\n      injectNodes(node);\n      node = next;\n    }\n  }\n  const coordinates = graphToCoords(graph);\n  document.getElementById('count').innerHTML = coordinates.length;\n  geometry.setCoordinates(coordinates);\n  feature.setGeometry(geometry);\n}\n\nfunction injectNodes(startNode) {\n  const endNode = startNode.next;\n\n  const start = startNode.point;\n  const end = startNode.next.point;\n  const dx = end[0] - start[0];\n  const dy = end[1] - start[1];\n\n  // first point at 1/3 along the segment\n  const firstNode = {\n    point: [start[0] + dx / 3, start[1] + dy / 3],\n  };\n\n  // second point at peak of _/\\_\n  const r = Math.sqrt(dx * dx + dy * dy) / (2 * cos30);\n  const a = Math.atan2(dy, dx) + Math.PI / 6;\n  const secondNode = {\n    point: [start[0] + r * Math.cos(a), start[1] + r * Math.sin(a)],\n  };\n\n  // third point at 2/3 along the segment\n  const thirdNode = {\n    point: [end[0] - dx / 3, end[1] - dy / 3],\n  };\n\n  startNode.next = firstNode;\n  firstNode.next = secondNode;\n  secondNode.next = thirdNode;\n  thirdNode.next = endNode;\n}\n\nfunction coordsToGraph(coordinates) {\n  const graph = {\n    point: coordinates[0],\n  };\n  const length = coordinates.length;\n  for (let level = 0, node = graph; level < length - 1; ++level) {\n    node.next = {\n      point: coordinates[level + 1],\n    };\n    node = node.next;\n  }\n  return graph;\n}\n\nfunction graphToCoords(graph) {\n  const coordinates = [graph.point];\n  for (let node = graph, i = 1; node.next; node = node.next, ++i) {\n    coordinates[i] = node.next.point;\n  }\n  return coordinates;\n}\n\nconst depthInput = document.getElementById('depth');\n\nfunction update() {\n  makeFractal(Number(depthInput.value));\n}\n\nlet updateTimer;\n\n/**\n * Regenerate fractal on depth change.  Change events are debounced so updates\n * only occur every 200ms.\n */\ndepthInput.onchange = function () {\n  window.clearTimeout(updateTimer);\n  updateTimer = window.setTimeout(update, 200);\n};\n\nupdate();\n"],"names":["radius","cos30","Math","cos","PI","rise","sin","run","triangle","LineString","feature","Feature","layer","VectorLayer","source","VectorSource","features","Map","layers","target","view","View","center","zoom","injectNodes","startNode","endNode","next","start","point","end","dx","dy","firstNode","r","sqrt","a","atan2","secondNode","thirdNode","updateTimer","depthInput","document","getElementById","update","depth","geometry","clone","graph","coordinates","length","level","node","coordsToGraph","getCoordinates","i","graphToCoords","innerHTML","setCoordinates","setGeometry","makeFractal","Number","value","onchange","window","clearTimeout","setTimeout"],"sourceRoot":""}