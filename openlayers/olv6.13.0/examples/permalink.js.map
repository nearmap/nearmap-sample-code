{"version":3,"file":"permalink.js","mappings":"qIAMIA,EAAO,EACPC,EAAS,CAAC,EAAG,GACbC,EAAW,EAEf,GAA6B,KAAzBC,OAAOC,SAASC,KAAa,CAE/B,IACMC,EADOH,OAAOC,SAASC,KAAKE,QAAQ,QAAS,IAChCC,MAAM,KACJ,IAAjBF,EAAMG,SACRT,EAAOU,WAAWJ,EAAM,IACxBL,EAAS,CAACS,WAAWJ,EAAM,IAAKI,WAAWJ,EAAM,KACjDJ,EAAWQ,WAAWJ,EAAM,KAIhC,IAAMK,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAIC,EAAAA,KAGhBC,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACblB,OAAQA,EACRD,KAAMA,EACNE,SAAUA,MAIVkB,GAAe,EACbF,EAAOP,EAAIU,UA0BjBV,EAAIW,GAAG,WAzBiB,WACtB,GAAKF,EAAL,CAMA,IAAMnB,EAASiB,EAAKK,YACdlB,EACJ,QACAa,EAAKM,UAAUC,QAAQ,GACvB,IACAxB,EAAO,GAAGwB,QAAQ,GAClB,IACAxB,EAAO,GAAGwB,QAAQ,GAClB,IACAP,EAAKQ,cACDC,EAAQ,CACZ3B,KAAMkB,EAAKM,UACXvB,OAAQiB,EAAKK,YACbrB,SAAUgB,EAAKQ,eAEjBvB,OAAOyB,QAAQC,UAAUF,EAAO,MAAOtB,QAnBrCe,GAAe,KA0BnBjB,OAAO2B,iBAAiB,YAAY,SAAUC,GACxB,OAAhBA,EAAMJ,QAGVhB,EAAIU,UAAUW,UAAUD,EAAMJ,MAAM1B,QACpCU,EAAIU,UAAUY,QAAQF,EAAMJ,MAAM3B,MAClCW,EAAIU,UAAUa,YAAYH,EAAMJ,MAAMzB,UACtCkB,GAAe,Q","sources":["webpack:///./permalink.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\n\n// default zoom, center and rotation\nlet zoom = 2;\nlet center = [0, 0];\nlet rotation = 0;\n\nif (window.location.hash !== '') {\n  // try to restore center, zoom-level and rotation from the URL\n  const hash = window.location.hash.replace('#map=', '');\n  const parts = hash.split('/');\n  if (parts.length === 4) {\n    zoom = parseFloat(parts[0]);\n    center = [parseFloat(parts[1]), parseFloat(parts[2])];\n    rotation = parseFloat(parts[3]);\n  }\n}\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: center,\n    zoom: zoom,\n    rotation: rotation,\n  }),\n});\n\nlet shouldUpdate = true;\nconst view = map.getView();\nconst updatePermalink = function () {\n  if (!shouldUpdate) {\n    // do not update the URL when the view was changed in the 'popstate' handler\n    shouldUpdate = true;\n    return;\n  }\n\n  const center = view.getCenter();\n  const hash =\n    '#map=' +\n    view.getZoom().toFixed(2) +\n    '/' +\n    center[0].toFixed(2) +\n    '/' +\n    center[1].toFixed(2) +\n    '/' +\n    view.getRotation();\n  const state = {\n    zoom: view.getZoom(),\n    center: view.getCenter(),\n    rotation: view.getRotation(),\n  };\n  window.history.pushState(state, 'map', hash);\n};\n\nmap.on('moveend', updatePermalink);\n\n// restore the view state when navigating through the history, see\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\nwindow.addEventListener('popstate', function (event) {\n  if (event.state === null) {\n    return;\n  }\n  map.getView().setCenter(event.state.center);\n  map.getView().setZoom(event.state.zoom);\n  map.getView().setRotation(event.state.rotation);\n  shouldUpdate = false;\n});\n"],"names":["zoom","center","rotation","window","location","hash","parts","replace","split","length","parseFloat","map","Map","layers","TileLayer","source","OSM","target","view","View","shouldUpdate","getView","on","getCenter","getZoom","toFixed","getRotation","state","history","pushState","addEventListener","event","setCenter","setZoom","setRotation"],"sourceRoot":""}