{"version":3,"file":"osm-vector-tiles.js","mappings":"sLAUMA,EAAiB,GACjBC,EAAY,CAChB,WAAc,OACd,WAAc,OACd,QAAW,QAEPC,EAAgB,IAAIC,EAAAA,GAAM,CAC9BC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,OACPC,QAAS,KAEXC,OAAQ,IAAIC,EAAAA,EAAO,CACjBH,MAAO,OACPI,MAAO,MAGLC,EAAa,IAAIR,EAAAA,GAAM,CAC3BC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,cA8BC,IAAIM,EAAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAAA,EAAgB,CAClBC,OAAQ,IAAIC,EAAAA,EAAiB,CAC3BC,aACE,8FAEFC,OAAQ,IAAIC,EAAAA,EAAS,CACnBC,UAAW,QACXP,OAAQ,CAAC,QAAS,QAAS,eAE7BQ,QAAS,GACTC,IACE,uGAGJC,MAAO,SAAUC,EAASC,GACxB,OAAQD,EAAQE,IAAI,UAClB,IAAK,QACH,OAAOf,EACT,IAAK,QACH,OAhDM,SAAUa,GAC1B,IAMMlB,EAAOI,EANPiB,EAAOH,EAAQE,IAAI,QACnBE,EAAUJ,EAAQE,IAAI,WACtBG,EAAWL,EAAQE,IAAI,YACvBI,EAAWH,EAAO,IAAMC,EAAU,IAAMC,EAC1CN,EAAQvB,EAAe8B,GAmB3B,OAlBKP,IAECK,GACFtB,EAAQ,OACRI,EAAQ,IAERJ,EAAQL,EAAU0B,GAClBjB,EAAgB,WAARiB,EAAoB,IAAM,GAEpCJ,EAAQ,IAAIpB,EAAAA,GAAM,CAChBK,OAAQ,IAAIC,EAAAA,EAAO,CACjBH,MAAOA,EACPI,MAAOA,IAETqB,OAAQF,IAEV7B,EAAe8B,GAAYP,GAEtBA,EAwBUS,CAAUR,GACnB,IAAK,YACH,OAAOC,EAAa,GAAKvB,EAAgB,KAC3C,QACE,OAAO,UAKjB+B,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,QAAQC,EAAAA,EAAAA,IAAW,EAAE,QAAS,UAC9BhB,QAAS,GACTiB,KAAM,S","sources":["webpack:///./osm-vector-tiles.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport TopoJSON from '../src/ol/format/TopoJSON.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nconst key = 'uZNs91nMR-muUTP99MyBSg';\n\nconst roadStyleCache = {};\nconst roadColor = {\n  'major_road': '#776',\n  'minor_road': '#ccb',\n  'highway': '#f39',\n};\nconst buildingStyle = new Style({\n  fill: new Fill({\n    color: '#666',\n    opacity: 0.4,\n  }),\n  stroke: new Stroke({\n    color: '#444',\n    width: 1,\n  }),\n});\nconst waterStyle = new Style({\n  fill: new Fill({\n    color: '#9db9e8',\n  }),\n});\nconst roadStyle = function (feature) {\n  const kind = feature.get('kind');\n  const railway = feature.get('railway');\n  const sort_key = feature.get('sort_key');\n  const styleKey = kind + '/' + railway + '/' + sort_key;\n  let style = roadStyleCache[styleKey];\n  if (!style) {\n    let color, width;\n    if (railway) {\n      color = '#7de';\n      width = 1;\n    } else {\n      color = roadColor[kind];\n      width = kind == 'highway' ? 1.5 : 1;\n    }\n    style = new Style({\n      stroke: new Stroke({\n        color: color,\n        width: width,\n      }),\n      zIndex: sort_key,\n    });\n    roadStyleCache[styleKey] = style;\n  }\n  return style;\n};\n\nconst map = new Map({\n  layers: [\n    new VectorTileLayer({\n      source: new VectorTileSource({\n        attributions:\n          '&copy; OpenStreetMap contributors, Whoâ€™s On First, ' +\n          'Natural Earth, and openstreetmapdata.com',\n        format: new TopoJSON({\n          layerName: 'layer',\n          layers: ['water', 'roads', 'buildings'],\n        }),\n        maxZoom: 19,\n        url:\n          'https://tile.nextzen.org/tilezen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=' +\n          key,\n      }),\n      style: function (feature, resolution) {\n        switch (feature.get('layer')) {\n          case 'water':\n            return waterStyle;\n          case 'roads':\n            return roadStyle(feature);\n          case 'buildings':\n            return resolution < 10 ? buildingStyle : null;\n          default:\n            return null;\n        }\n      },\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([-74.0064, 40.7142]),\n    maxZoom: 19,\n    zoom: 15,\n  }),\n});\n"],"names":["roadStyleCache","roadColor","buildingStyle","Style","fill","Fill","color","opacity","stroke","Stroke","width","waterStyle","Map","layers","VectorTileLayer","source","VectorTileSource","attributions","format","TopoJSON","layerName","maxZoom","url","style","feature","resolution","get","kind","railway","sort_key","styleKey","zIndex","roadStyle","target","view","View","center","fromLonLat","zoom"],"sourceRoot":""}