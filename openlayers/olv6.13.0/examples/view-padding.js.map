{"version":3,"file":"view-padding.js","mappings":"qNASMA,EAAS,IAAIC,EAAAA,EAAa,CAC9BC,IAAK,mCACLC,OAAQ,IAAIC,EAAAA,IAERC,EAAQ,IAAIC,EAAAA,GAAM,CACtBC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,6BAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,IAETC,MAAO,IAAIC,EAAAA,EAAY,CACrBC,OAAQ,EACRR,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,6BAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,QAIPI,EAAc,IAAIC,EAAAA,EAAY,CAClCjB,OAAQA,EACRK,MAAOA,IAEHa,EAAO,IAAIC,EAAAA,GAAK,CACpBC,QAAQC,EAAAA,EAAAA,IAAW,CAAC,UAAW,aAC/BC,QAAS,CAAC,IAAK,GAAI,GAAI,KACvBC,KAAM,IAEI,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZ1B,OAAQ,IAAI2B,EAAAA,IAEdX,GAEFY,OAAQ,MACRV,KAAMA,IAGRF,EAAYa,YAAYC,GAAG,mBAAmB,WAClBC,SAASC,eAAe,qBAChCC,iBAChB,SACA,WACE,IACMC,EADUlC,EAAOmC,cAAc,GACbC,cACxBlB,EAAKmB,IAAIH,MAEX,GAGqBH,SAASC,eAAe,kBAChCC,iBACb,SACA,WACE,IACMK,EADUtC,EAAOmC,cAAc,GACfC,cACtBlB,EAAKqB,UAAUD,EAAME,qBAEvB,Q","sources":["webpack:///./view-padding.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\n/** @type {VectorSource<import(\"../src/ol/geom/SimpleGeometry.js\").default>} */\nconst source = new VectorSource({\n  url: 'data/geojson/switzerland.geojson',\n  format: new GeoJSON(),\n});\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)',\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1,\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.6)',\n    }),\n    stroke: new Stroke({\n      color: '#319FD3',\n      width: 1,\n    }),\n  }),\n});\nconst vectorLayer = new VectorLayer({\n  source: source,\n  style: style,\n});\nconst view = new View({\n  center: fromLonLat([6.6339863, 46.5193823]),\n  padding: [170, 50, 30, 150],\n  zoom: 6,\n});\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    vectorLayer,\n  ],\n  target: 'map',\n  view: view,\n});\n\nvectorLayer.getSource().on('featuresloadend', function () {\n  const zoomtoswitzerland = document.getElementById('zoomtoswitzerland');\n  zoomtoswitzerland.addEventListener(\n    'click',\n    function () {\n      const feature = source.getFeatures()[0];\n      const polygon = feature.getGeometry();\n      view.fit(polygon);\n    },\n    false\n  );\n\n  const centerlausanne = document.getElementById('centerlausanne');\n  centerlausanne.addEventListener(\n    'click',\n    function () {\n      const feature = source.getFeatures()[1];\n      const point = feature.getGeometry();\n      view.setCenter(point.getCoordinates());\n    },\n    false\n  );\n});\n"],"names":["source","VectorSource","url","format","GeoJSON","style","Style","fill","Fill","color","stroke","Stroke","width","image","CircleStyle","radius","vectorLayer","VectorLayer","view","View","center","fromLonLat","padding","zoom","Map","layers","TileLayer","OSM","target","getSource","on","document","getElementById","addEventListener","polygon","getFeatures","getGeometry","fit","point","setCenter","getCoordinates"],"sourceRoot":""}