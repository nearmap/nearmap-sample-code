{"version":3,"file":"layer-clipping.js","mappings":"sIAKMA,EAAM,IAAIC,EAAAA,EAAU,CACxBC,OAAQ,IAAIC,EAAAA,IAGF,IAAIC,EAAAA,EAAI,CAClBC,OAAQ,CAACL,GACTM,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVV,EAAIW,GAAG,aAAa,SAAUC,GAC5B,IAAMC,EAAMD,EAAME,QAGZC,EAASH,EAAMI,sBACfC,EAAmBC,KAAKC,KAC5BJ,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAEvCK,GAAkBF,KAAKG,MAAMN,EAAO,GAAIA,EAAO,IACrDF,EAAIS,OAEJT,EAAIU,UAAUV,EAAIW,OAAOC,MAAQ,EAAGZ,EAAIW,OAAOE,OAAS,GACxDb,EAAIc,QAAQP,GAEZP,EAAIe,MAAM,EAAIX,EAAkB,EAAIA,GACpCJ,EAAIU,WAAW,IAAK,IACpBV,EAAIgB,YACJhB,EAAIiB,OAAO,GAAI,IACfjB,EAAIkB,cAAc,GAAI,GAAI,GAAI,GAAI,GAAI,IACtClB,EAAIkB,cAAc,GAAI,GAAI,GAAI,KAAM,GAAI,MACxClB,EAAIkB,cAAc,GAAI,GAAI,GAAI,IAAK,GAAI,KACvClB,EAAIkB,cAAc,IAAK,IAAK,IAAK,GAAI,IAAK,MAC1ClB,EAAIkB,cAAc,IAAK,KAAM,IAAK,GAAI,IAAK,IAC3ClB,EAAIkB,cAAc,GAAI,GAAI,GAAI,GAAI,GAAI,IACtClB,EAAImB,OACJnB,EAAIU,UAAU,GAAI,IAClBV,EAAIe,MAAM,EAAI,EAAIX,EAAkB,EAAI,EAAIA,GAG5CJ,EAAIc,OAAOP,GACXP,EAAIU,WAAWV,EAAIW,OAAOC,MAAQ,GAAIZ,EAAIW,OAAOE,OAAS,MAG5D1B,EAAIW,GAAG,cAAc,SAAUC,GACjBA,EAAME,QACdmB,e","sources":["webpack:///./layer-clipping.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\n\nconst osm = new TileLayer({\n  source: new OSM(),\n});\n\nconst map = new Map({\n  layers: [osm],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nosm.on('prerender', function (event) {\n  const ctx = event.context;\n\n  // calculate the pixel ratio and rotation of the canvas\n  const matrix = event.inversePixelTransform;\n  const canvasPixelRatio = Math.sqrt(\n    matrix[0] * matrix[0] + matrix[1] * matrix[1]\n  );\n  const canvasRotation = -Math.atan2(matrix[1], matrix[0]);\n  ctx.save();\n  // center the canvas and remove rotation to position clipping\n  ctx.translate(ctx.canvas.width / 2, ctx.canvas.height / 2);\n  ctx.rotate(-canvasRotation);\n\n  ctx.scale(3 * canvasPixelRatio, 3 * canvasPixelRatio);\n  ctx.translate(-75, -80);\n  ctx.beginPath();\n  ctx.moveTo(75, 40);\n  ctx.bezierCurveTo(75, 37, 70, 25, 50, 25);\n  ctx.bezierCurveTo(20, 25, 20, 62.5, 20, 62.5);\n  ctx.bezierCurveTo(20, 80, 40, 102, 75, 120);\n  ctx.bezierCurveTo(110, 102, 130, 80, 130, 62.5);\n  ctx.bezierCurveTo(130, 62.5, 130, 25, 100, 25);\n  ctx.bezierCurveTo(85, 25, 75, 37, 75, 40);\n  ctx.clip();\n  ctx.translate(75, 80);\n  ctx.scale(1 / 3 / canvasPixelRatio, 1 / 3 / canvasPixelRatio);\n\n  // reapply canvas rotation and position\n  ctx.rotate(canvasRotation);\n  ctx.translate(-ctx.canvas.width / 2, -ctx.canvas.height / 2);\n});\n\nosm.on('postrender', function (event) {\n  const ctx = event.context;\n  ctx.restore();\n});\n"],"names":["osm","TileLayer","source","OSM","Map","layers","target","view","View","center","zoom","on","event","ctx","context","matrix","inversePixelTransform","canvasPixelRatio","Math","sqrt","canvasRotation","atan2","save","translate","canvas","width","height","rotate","scale","beginPath","moveTo","bezierCurveTo","clip","restore"],"sourceRoot":""}